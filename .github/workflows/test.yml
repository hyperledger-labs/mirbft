#
# SPDX-License-Identifier: Apache-2.0
#

name: MirBFT Test
on: [push, pull_request]
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.15', '1.16' ]
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install test tools
        run: |
          go install github.com/onsi/ginkgo/ginkgo
          go install honnef.co/go/tools/cmd/staticcheck

      - name: Go Test
        run: go test

      - name: Staticcheck
        run: staticcheck ./...

# LEGACY TEST WORKFLOW
#name: MirBFT Test
#on: [push, pull_request]
#jobs:
#  tests:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        go: [ '1.15', '1.16' ]
#    steps:
#      - name: Set up Golang
#        uses: actions/setup-go@v2
#        with:
#          go-version: ${{ matrix.go }}
#
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Install test tools
#        run: |
#          go install github.com/onsi/ginkgo/ginkgo
#          go install honnef.co/go/tools/cmd/staticcheck
#
#      - name: Gingko Tests
#        env:
#          MIRBFT_TEST_CONTEXT_TIMEOUT: 180s
#          MIRBFT_TEST_STRESS_TEST_TIMEOUT: 30s
#          MIRBFT_TEST_STRESS_TICK_INTERVAL: 1000ms
#        run: ginkgo -r --randomizeAllSpecs --randomizeSuites --race --trace
#
#      - name: Staticcheck
#        run: staticcheck ./...
