//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: requestreceiver/requestreceiver.proto

package requestreceiver

import (
	context "context"
	requestpb "github.com/hyperledger-labs/mirbft/pkg/pb/requestpb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ByeBye struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ByeBye) Reset() {
	*x = ByeBye{}
	if protoimpl.UnsafeEnabled {
		mi := &file_requestreceiver_requestreceiver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByeBye) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByeBye) ProtoMessage() {}

func (x *ByeBye) ProtoReflect() protoreflect.Message {
	mi := &file_requestreceiver_requestreceiver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByeBye.ProtoReflect.Descriptor instead.
func (*ByeBye) Descriptor() ([]byte, []int) {
	return file_requestreceiver_requestreceiver_proto_rawDescGZIP(), []int{0}
}

var File_requestreceiver_requestreceiver_proto protoreflect.FileDescriptor

var file_requestreceiver_requestreceiver_proto_rawDesc = []byte{
	0x0a, 0x25, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06, 0x42, 0x79, 0x65, 0x42, 0x79, 0x65, 0x32, 0x4a, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x42, 0x79, 0x65, 0x42, 0x79, 0x65, 0x28, 0x01, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x69, 0x72, 0x62, 0x66, 0x74, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_requestreceiver_requestreceiver_proto_rawDescOnce sync.Once
	file_requestreceiver_requestreceiver_proto_rawDescData = file_requestreceiver_requestreceiver_proto_rawDesc
)

func file_requestreceiver_requestreceiver_proto_rawDescGZIP() []byte {
	file_requestreceiver_requestreceiver_proto_rawDescOnce.Do(func() {
		file_requestreceiver_requestreceiver_proto_rawDescData = protoimpl.X.CompressGZIP(file_requestreceiver_requestreceiver_proto_rawDescData)
	})
	return file_requestreceiver_requestreceiver_proto_rawDescData
}

var file_requestreceiver_requestreceiver_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_requestreceiver_requestreceiver_proto_goTypes = []interface{}{
	(*ByeBye)(nil),            // 0: requestreceiver.ByeBye
	(*requestpb.Request)(nil), // 1: requestpb.Request
}
var file_requestreceiver_requestreceiver_proto_depIdxs = []int32{
	1, // 0: requestreceiver.RequestReceiver.Listen:input_type -> requestpb.Request
	0, // 1: requestreceiver.RequestReceiver.Listen:output_type -> requestreceiver.ByeBye
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_requestreceiver_requestreceiver_proto_init() }
func file_requestreceiver_requestreceiver_proto_init() {
	if File_requestreceiver_requestreceiver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_requestreceiver_requestreceiver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByeBye); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_requestreceiver_requestreceiver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_requestreceiver_requestreceiver_proto_goTypes,
		DependencyIndexes: file_requestreceiver_requestreceiver_proto_depIdxs,
		MessageInfos:      file_requestreceiver_requestreceiver_proto_msgTypes,
	}.Build()
	File_requestreceiver_requestreceiver_proto = out.File
	file_requestreceiver_requestreceiver_proto_rawDesc = nil
	file_requestreceiver_requestreceiver_proto_goTypes = nil
	file_requestreceiver_requestreceiver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RequestReceiverClient is the client API for RequestReceiver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestReceiverClient interface {
	Listen(ctx context.Context, opts ...grpc.CallOption) (RequestReceiver_ListenClient, error)
}

type requestReceiverClient struct {
	cc grpc.ClientConnInterface
}

func NewRequestReceiverClient(cc grpc.ClientConnInterface) RequestReceiverClient {
	return &requestReceiverClient{cc}
}

func (c *requestReceiverClient) Listen(ctx context.Context, opts ...grpc.CallOption) (RequestReceiver_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RequestReceiver_serviceDesc.Streams[0], "/requestreceiver.RequestReceiver/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &requestReceiverListenClient{stream}
	return x, nil
}

type RequestReceiver_ListenClient interface {
	Send(*requestpb.Request) error
	CloseAndRecv() (*ByeBye, error)
	grpc.ClientStream
}

type requestReceiverListenClient struct {
	grpc.ClientStream
}

func (x *requestReceiverListenClient) Send(m *requestpb.Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *requestReceiverListenClient) CloseAndRecv() (*ByeBye, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ByeBye)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RequestReceiverServer is the server API for RequestReceiver service.
type RequestReceiverServer interface {
	Listen(RequestReceiver_ListenServer) error
}

// UnimplementedRequestReceiverServer can be embedded to have forward compatible implementations.
type UnimplementedRequestReceiverServer struct {
}

func (*UnimplementedRequestReceiverServer) Listen(RequestReceiver_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterRequestReceiverServer(s *grpc.Server, srv RequestReceiverServer) {
	s.RegisterService(&_RequestReceiver_serviceDesc, srv)
}

func _RequestReceiver_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RequestReceiverServer).Listen(&requestReceiverListenServer{stream})
}

type RequestReceiver_ListenServer interface {
	SendAndClose(*ByeBye) error
	Recv() (*requestpb.Request, error)
	grpc.ServerStream
}

type requestReceiverListenServer struct {
	grpc.ServerStream
}

func (x *requestReceiverListenServer) SendAndClose(m *ByeBye) error {
	return x.ServerStream.SendMsg(m)
}

func (x *requestReceiverListenServer) Recv() (*requestpb.Request, error) {
	m := new(requestpb.Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RequestReceiver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "requestreceiver.RequestReceiver",
	HandlerType: (*RequestReceiverServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _RequestReceiver_Listen_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "requestreceiver/requestreceiver.proto",
}
