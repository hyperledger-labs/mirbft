// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isspb/isspb.proto

package isspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	isspbftpb "github.com/hyperledger-labs/mirbft/pkg/pb/isspbftpb"
	requestpb "github.com/hyperledger-labs/mirbft/pkg/pb/requestpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ISSMessage struct {
	// Types that are valid to be assigned to Type:
	//	*ISSMessage_Sb
	Type                 isISSMessage_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ISSMessage) Reset()         { *m = ISSMessage{} }
func (m *ISSMessage) String() string { return proto.CompactTextString(m) }
func (*ISSMessage) ProtoMessage()    {}
func (*ISSMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{0}
}

func (m *ISSMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ISSMessage.Unmarshal(m, b)
}
func (m *ISSMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ISSMessage.Marshal(b, m, deterministic)
}
func (m *ISSMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ISSMessage.Merge(m, src)
}
func (m *ISSMessage) XXX_Size() int {
	return xxx_messageInfo_ISSMessage.Size(m)
}
func (m *ISSMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ISSMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ISSMessage proto.InternalMessageInfo

type isISSMessage_Type interface {
	isISSMessage_Type()
}

type ISSMessage_Sb struct {
	Sb *SBMessage `protobuf:"bytes,1,opt,name=sb,proto3,oneof"`
}

func (*ISSMessage_Sb) isISSMessage_Type() {}

func (m *ISSMessage) GetType() isISSMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ISSMessage) GetSb() *SBMessage {
	if x, ok := m.GetType().(*ISSMessage_Sb); ok {
		return x.Sb
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ISSMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ISSMessage_Sb)(nil),
	}
}

type SBMessage struct {
	Epoch                uint64             `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Instance             uint64             `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Msg                  *SBInstanceMessage `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SBMessage) Reset()         { *m = SBMessage{} }
func (m *SBMessage) String() string { return proto.CompactTextString(m) }
func (*SBMessage) ProtoMessage()    {}
func (*SBMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{1}
}

func (m *SBMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBMessage.Unmarshal(m, b)
}
func (m *SBMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBMessage.Marshal(b, m, deterministic)
}
func (m *SBMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBMessage.Merge(m, src)
}
func (m *SBMessage) XXX_Size() int {
	return xxx_messageInfo_SBMessage.Size(m)
}
func (m *SBMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SBMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SBMessage proto.InternalMessageInfo

func (m *SBMessage) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *SBMessage) GetInstance() uint64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *SBMessage) GetMsg() *SBInstanceMessage {
	if m != nil {
		return m.Msg
	}
	return nil
}

type SBInstanceMessage struct {
	// Types that are valid to be assigned to Type:
	//	*SBInstanceMessage_PbftPreprepare
	Type                 isSBInstanceMessage_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SBInstanceMessage) Reset()         { *m = SBInstanceMessage{} }
func (m *SBInstanceMessage) String() string { return proto.CompactTextString(m) }
func (*SBInstanceMessage) ProtoMessage()    {}
func (*SBInstanceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{2}
}

func (m *SBInstanceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBInstanceMessage.Unmarshal(m, b)
}
func (m *SBInstanceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBInstanceMessage.Marshal(b, m, deterministic)
}
func (m *SBInstanceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBInstanceMessage.Merge(m, src)
}
func (m *SBInstanceMessage) XXX_Size() int {
	return xxx_messageInfo_SBInstanceMessage.Size(m)
}
func (m *SBInstanceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SBInstanceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SBInstanceMessage proto.InternalMessageInfo

type isSBInstanceMessage_Type interface {
	isSBInstanceMessage_Type()
}

type SBInstanceMessage_PbftPreprepare struct {
	PbftPreprepare *isspbftpb.Preprepare `protobuf:"bytes,3,opt,name=pbft_preprepare,json=pbftPreprepare,proto3,oneof"`
}

func (*SBInstanceMessage_PbftPreprepare) isSBInstanceMessage_Type() {}

func (m *SBInstanceMessage) GetType() isSBInstanceMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SBInstanceMessage) GetPbftPreprepare() *isspbftpb.Preprepare {
	if x, ok := m.GetType().(*SBInstanceMessage_PbftPreprepare); ok {
		return x.PbftPreprepare
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SBInstanceMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SBInstanceMessage_PbftPreprepare)(nil),
	}
}

type ISSEvent struct {
	// Types that are valid to be assigned to Type:
	//	*ISSEvent_Sb
	Type                 isISSEvent_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ISSEvent) Reset()         { *m = ISSEvent{} }
func (m *ISSEvent) String() string { return proto.CompactTextString(m) }
func (*ISSEvent) ProtoMessage()    {}
func (*ISSEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{3}
}

func (m *ISSEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ISSEvent.Unmarshal(m, b)
}
func (m *ISSEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ISSEvent.Marshal(b, m, deterministic)
}
func (m *ISSEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ISSEvent.Merge(m, src)
}
func (m *ISSEvent) XXX_Size() int {
	return xxx_messageInfo_ISSEvent.Size(m)
}
func (m *ISSEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ISSEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ISSEvent proto.InternalMessageInfo

type isISSEvent_Type interface {
	isISSEvent_Type()
}

type ISSEvent_Sb struct {
	Sb *SBEvent `protobuf:"bytes,1,opt,name=sb,proto3,oneof"`
}

func (*ISSEvent_Sb) isISSEvent_Type() {}

func (m *ISSEvent) GetType() isISSEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ISSEvent) GetSb() *SBEvent {
	if x, ok := m.GetType().(*ISSEvent_Sb); ok {
		return x.Sb
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ISSEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ISSEvent_Sb)(nil),
	}
}

type SBEvent struct {
	Epoch                uint64           `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Instance             uint64           `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Event                *SBInstanceEvent `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SBEvent) Reset()         { *m = SBEvent{} }
func (m *SBEvent) String() string { return proto.CompactTextString(m) }
func (*SBEvent) ProtoMessage()    {}
func (*SBEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{4}
}

func (m *SBEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBEvent.Unmarshal(m, b)
}
func (m *SBEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBEvent.Marshal(b, m, deterministic)
}
func (m *SBEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBEvent.Merge(m, src)
}
func (m *SBEvent) XXX_Size() int {
	return xxx_messageInfo_SBEvent.Size(m)
}
func (m *SBEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SBEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SBEvent proto.InternalMessageInfo

func (m *SBEvent) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *SBEvent) GetInstance() uint64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *SBEvent) GetEvent() *SBInstanceEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type SBInstanceEvent struct {
	// Types that are valid to be assigned to Type:
	//	*SBInstanceEvent_Deliver
	//	*SBInstanceEvent_MessageReceived
	//	*SBInstanceEvent_PendingRequests
	//	*SBInstanceEvent_Tick
	//	*SBInstanceEvent_CutBatch
	//	*SBInstanceEvent_BatchReady
	//	*SBInstanceEvent_WaitForRequests
	//	*SBInstanceEvent_RequestsReady
	//	*SBInstanceEvent_PbftPersistPreprepare
	Type                 isSBInstanceEvent_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SBInstanceEvent) Reset()         { *m = SBInstanceEvent{} }
func (m *SBInstanceEvent) String() string { return proto.CompactTextString(m) }
func (*SBInstanceEvent) ProtoMessage()    {}
func (*SBInstanceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{5}
}

func (m *SBInstanceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBInstanceEvent.Unmarshal(m, b)
}
func (m *SBInstanceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBInstanceEvent.Marshal(b, m, deterministic)
}
func (m *SBInstanceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBInstanceEvent.Merge(m, src)
}
func (m *SBInstanceEvent) XXX_Size() int {
	return xxx_messageInfo_SBInstanceEvent.Size(m)
}
func (m *SBInstanceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SBInstanceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SBInstanceEvent proto.InternalMessageInfo

type isSBInstanceEvent_Type interface {
	isSBInstanceEvent_Type()
}

type SBInstanceEvent_Deliver struct {
	Deliver *SBDeliver `protobuf:"bytes,1,opt,name=deliver,proto3,oneof"`
}

type SBInstanceEvent_MessageReceived struct {
	MessageReceived *SBMessageReceived `protobuf:"bytes,2,opt,name=message_received,json=messageReceived,proto3,oneof"`
}

type SBInstanceEvent_PendingRequests struct {
	PendingRequests *SBPendingRequests `protobuf:"bytes,3,opt,name=pending_requests,json=pendingRequests,proto3,oneof"`
}

type SBInstanceEvent_Tick struct {
	Tick *SBTick `protobuf:"bytes,4,opt,name=tick,proto3,oneof"`
}

type SBInstanceEvent_CutBatch struct {
	CutBatch *SBCutBatch `protobuf:"bytes,5,opt,name=cut_batch,json=cutBatch,proto3,oneof"`
}

type SBInstanceEvent_BatchReady struct {
	BatchReady *SBBatchReady `protobuf:"bytes,6,opt,name=batch_ready,json=batchReady,proto3,oneof"`
}

type SBInstanceEvent_WaitForRequests struct {
	WaitForRequests *SBWaitForRequests `protobuf:"bytes,7,opt,name=wait_for_requests,json=waitForRequests,proto3,oneof"`
}

type SBInstanceEvent_RequestsReady struct {
	RequestsReady *SBRequestsReady `protobuf:"bytes,8,opt,name=requests_ready,json=requestsReady,proto3,oneof"`
}

type SBInstanceEvent_PbftPersistPreprepare struct {
	PbftPersistPreprepare *isspbftpb.PersistPreprepare `protobuf:"bytes,9,opt,name=pbft_persist_preprepare,json=pbftPersistPreprepare,proto3,oneof"`
}

func (*SBInstanceEvent_Deliver) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_MessageReceived) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_PendingRequests) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_Tick) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_CutBatch) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_BatchReady) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_WaitForRequests) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_RequestsReady) isSBInstanceEvent_Type() {}

func (*SBInstanceEvent_PbftPersistPreprepare) isSBInstanceEvent_Type() {}

func (m *SBInstanceEvent) GetType() isSBInstanceEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SBInstanceEvent) GetDeliver() *SBDeliver {
	if x, ok := m.GetType().(*SBInstanceEvent_Deliver); ok {
		return x.Deliver
	}
	return nil
}

func (m *SBInstanceEvent) GetMessageReceived() *SBMessageReceived {
	if x, ok := m.GetType().(*SBInstanceEvent_MessageReceived); ok {
		return x.MessageReceived
	}
	return nil
}

func (m *SBInstanceEvent) GetPendingRequests() *SBPendingRequests {
	if x, ok := m.GetType().(*SBInstanceEvent_PendingRequests); ok {
		return x.PendingRequests
	}
	return nil
}

func (m *SBInstanceEvent) GetTick() *SBTick {
	if x, ok := m.GetType().(*SBInstanceEvent_Tick); ok {
		return x.Tick
	}
	return nil
}

func (m *SBInstanceEvent) GetCutBatch() *SBCutBatch {
	if x, ok := m.GetType().(*SBInstanceEvent_CutBatch); ok {
		return x.CutBatch
	}
	return nil
}

func (m *SBInstanceEvent) GetBatchReady() *SBBatchReady {
	if x, ok := m.GetType().(*SBInstanceEvent_BatchReady); ok {
		return x.BatchReady
	}
	return nil
}

func (m *SBInstanceEvent) GetWaitForRequests() *SBWaitForRequests {
	if x, ok := m.GetType().(*SBInstanceEvent_WaitForRequests); ok {
		return x.WaitForRequests
	}
	return nil
}

func (m *SBInstanceEvent) GetRequestsReady() *SBRequestsReady {
	if x, ok := m.GetType().(*SBInstanceEvent_RequestsReady); ok {
		return x.RequestsReady
	}
	return nil
}

func (m *SBInstanceEvent) GetPbftPersistPreprepare() *isspbftpb.PersistPreprepare {
	if x, ok := m.GetType().(*SBInstanceEvent_PbftPersistPreprepare); ok {
		return x.PbftPersistPreprepare
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SBInstanceEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SBInstanceEvent_Deliver)(nil),
		(*SBInstanceEvent_MessageReceived)(nil),
		(*SBInstanceEvent_PendingRequests)(nil),
		(*SBInstanceEvent_Tick)(nil),
		(*SBInstanceEvent_CutBatch)(nil),
		(*SBInstanceEvent_BatchReady)(nil),
		(*SBInstanceEvent_WaitForRequests)(nil),
		(*SBInstanceEvent_RequestsReady)(nil),
		(*SBInstanceEvent_PbftPersistPreprepare)(nil),
	}
}

type SBCutBatch struct {
	MaxSize              uint64   `protobuf:"varint,1,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBCutBatch) Reset()         { *m = SBCutBatch{} }
func (m *SBCutBatch) String() string { return proto.CompactTextString(m) }
func (*SBCutBatch) ProtoMessage()    {}
func (*SBCutBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{6}
}

func (m *SBCutBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBCutBatch.Unmarshal(m, b)
}
func (m *SBCutBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBCutBatch.Marshal(b, m, deterministic)
}
func (m *SBCutBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBCutBatch.Merge(m, src)
}
func (m *SBCutBatch) XXX_Size() int {
	return xxx_messageInfo_SBCutBatch.Size(m)
}
func (m *SBCutBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_SBCutBatch.DiscardUnknown(m)
}

var xxx_messageInfo_SBCutBatch proto.InternalMessageInfo

func (m *SBCutBatch) GetMaxSize() uint64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

type SBBatchReady struct {
	Batch                *requestpb.Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	PendingRequestsLeft  uint64           `protobuf:"varint,2,opt,name=pending_requests_left,json=pendingRequestsLeft,proto3" json:"pending_requests_left,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SBBatchReady) Reset()         { *m = SBBatchReady{} }
func (m *SBBatchReady) String() string { return proto.CompactTextString(m) }
func (*SBBatchReady) ProtoMessage()    {}
func (*SBBatchReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{7}
}

func (m *SBBatchReady) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBBatchReady.Unmarshal(m, b)
}
func (m *SBBatchReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBBatchReady.Marshal(b, m, deterministic)
}
func (m *SBBatchReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBBatchReady.Merge(m, src)
}
func (m *SBBatchReady) XXX_Size() int {
	return xxx_messageInfo_SBBatchReady.Size(m)
}
func (m *SBBatchReady) XXX_DiscardUnknown() {
	xxx_messageInfo_SBBatchReady.DiscardUnknown(m)
}

var xxx_messageInfo_SBBatchReady proto.InternalMessageInfo

func (m *SBBatchReady) GetBatch() *requestpb.Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *SBBatchReady) GetPendingRequestsLeft() uint64 {
	if m != nil {
		return m.PendingRequestsLeft
	}
	return 0
}

type SBWaitForRequests struct {
	Sn                   uint64                  `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Requests             []*requestpb.RequestRef `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SBWaitForRequests) Reset()         { *m = SBWaitForRequests{} }
func (m *SBWaitForRequests) String() string { return proto.CompactTextString(m) }
func (*SBWaitForRequests) ProtoMessage()    {}
func (*SBWaitForRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{8}
}

func (m *SBWaitForRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBWaitForRequests.Unmarshal(m, b)
}
func (m *SBWaitForRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBWaitForRequests.Marshal(b, m, deterministic)
}
func (m *SBWaitForRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBWaitForRequests.Merge(m, src)
}
func (m *SBWaitForRequests) XXX_Size() int {
	return xxx_messageInfo_SBWaitForRequests.Size(m)
}
func (m *SBWaitForRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_SBWaitForRequests.DiscardUnknown(m)
}

var xxx_messageInfo_SBWaitForRequests proto.InternalMessageInfo

func (m *SBWaitForRequests) GetSn() uint64 {
	if m != nil {
		return m.Sn
	}
	return 0
}

func (m *SBWaitForRequests) GetRequests() []*requestpb.RequestRef {
	if m != nil {
		return m.Requests
	}
	return nil
}

type SBRequestsReady struct {
	Sn                   uint64   `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBRequestsReady) Reset()         { *m = SBRequestsReady{} }
func (m *SBRequestsReady) String() string { return proto.CompactTextString(m) }
func (*SBRequestsReady) ProtoMessage()    {}
func (*SBRequestsReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{9}
}

func (m *SBRequestsReady) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBRequestsReady.Unmarshal(m, b)
}
func (m *SBRequestsReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBRequestsReady.Marshal(b, m, deterministic)
}
func (m *SBRequestsReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBRequestsReady.Merge(m, src)
}
func (m *SBRequestsReady) XXX_Size() int {
	return xxx_messageInfo_SBRequestsReady.Size(m)
}
func (m *SBRequestsReady) XXX_DiscardUnknown() {
	xxx_messageInfo_SBRequestsReady.DiscardUnknown(m)
}

var xxx_messageInfo_SBRequestsReady proto.InternalMessageInfo

func (m *SBRequestsReady) GetSn() uint64 {
	if m != nil {
		return m.Sn
	}
	return 0
}

type SBDeliver struct {
	Sn                   uint64           `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Batch                *requestpb.Batch `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SBDeliver) Reset()         { *m = SBDeliver{} }
func (m *SBDeliver) String() string { return proto.CompactTextString(m) }
func (*SBDeliver) ProtoMessage()    {}
func (*SBDeliver) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{10}
}

func (m *SBDeliver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBDeliver.Unmarshal(m, b)
}
func (m *SBDeliver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBDeliver.Marshal(b, m, deterministic)
}
func (m *SBDeliver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBDeliver.Merge(m, src)
}
func (m *SBDeliver) XXX_Size() int {
	return xxx_messageInfo_SBDeliver.Size(m)
}
func (m *SBDeliver) XXX_DiscardUnknown() {
	xxx_messageInfo_SBDeliver.DiscardUnknown(m)
}

var xxx_messageInfo_SBDeliver proto.InternalMessageInfo

func (m *SBDeliver) GetSn() uint64 {
	if m != nil {
		return m.Sn
	}
	return 0
}

func (m *SBDeliver) GetBatch() *requestpb.Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

type SBMessageReceived struct {
	From                 uint64             `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Msg                  *SBInstanceMessage `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SBMessageReceived) Reset()         { *m = SBMessageReceived{} }
func (m *SBMessageReceived) String() string { return proto.CompactTextString(m) }
func (*SBMessageReceived) ProtoMessage()    {}
func (*SBMessageReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{11}
}

func (m *SBMessageReceived) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBMessageReceived.Unmarshal(m, b)
}
func (m *SBMessageReceived) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBMessageReceived.Marshal(b, m, deterministic)
}
func (m *SBMessageReceived) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBMessageReceived.Merge(m, src)
}
func (m *SBMessageReceived) XXX_Size() int {
	return xxx_messageInfo_SBMessageReceived.Size(m)
}
func (m *SBMessageReceived) XXX_DiscardUnknown() {
	xxx_messageInfo_SBMessageReceived.DiscardUnknown(m)
}

var xxx_messageInfo_SBMessageReceived proto.InternalMessageInfo

func (m *SBMessageReceived) GetFrom() uint64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SBMessageReceived) GetMsg() *SBInstanceMessage {
	if m != nil {
		return m.Msg
	}
	return nil
}

type SBPendingRequests struct {
	NumRequests          uint64   `protobuf:"varint,1,opt,name=numRequests,proto3" json:"numRequests,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBPendingRequests) Reset()         { *m = SBPendingRequests{} }
func (m *SBPendingRequests) String() string { return proto.CompactTextString(m) }
func (*SBPendingRequests) ProtoMessage()    {}
func (*SBPendingRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{12}
}

func (m *SBPendingRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBPendingRequests.Unmarshal(m, b)
}
func (m *SBPendingRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBPendingRequests.Marshal(b, m, deterministic)
}
func (m *SBPendingRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBPendingRequests.Merge(m, src)
}
func (m *SBPendingRequests) XXX_Size() int {
	return xxx_messageInfo_SBPendingRequests.Size(m)
}
func (m *SBPendingRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_SBPendingRequests.DiscardUnknown(m)
}

var xxx_messageInfo_SBPendingRequests proto.InternalMessageInfo

func (m *SBPendingRequests) GetNumRequests() uint64 {
	if m != nil {
		return m.NumRequests
	}
	return 0
}

type SBTick struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBTick) Reset()         { *m = SBTick{} }
func (m *SBTick) String() string { return proto.CompactTextString(m) }
func (*SBTick) ProtoMessage()    {}
func (*SBTick) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{13}
}

func (m *SBTick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBTick.Unmarshal(m, b)
}
func (m *SBTick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBTick.Marshal(b, m, deterministic)
}
func (m *SBTick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBTick.Merge(m, src)
}
func (m *SBTick) XXX_Size() int {
	return xxx_messageInfo_SBTick.Size(m)
}
func (m *SBTick) XXX_DiscardUnknown() {
	xxx_messageInfo_SBTick.DiscardUnknown(m)
}

var xxx_messageInfo_SBTick proto.InternalMessageInfo

type Status struct {
	Epoch                uint64      `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Orderers             []*SBStatus `protobuf:"bytes,2,rep,name=orderers,proto3" json:"orderers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{14}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Status) GetOrderers() []*SBStatus {
	if m != nil {
		return m.Orderers
	}
	return nil
}

type SBStatus struct {
	Leader               uint64   `protobuf:"varint,1,opt,name=leader,proto3" json:"leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBStatus) Reset()         { *m = SBStatus{} }
func (m *SBStatus) String() string { return proto.CompactTextString(m) }
func (*SBStatus) ProtoMessage()    {}
func (*SBStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c987db0a07e2d8, []int{15}
}

func (m *SBStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBStatus.Unmarshal(m, b)
}
func (m *SBStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBStatus.Marshal(b, m, deterministic)
}
func (m *SBStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBStatus.Merge(m, src)
}
func (m *SBStatus) XXX_Size() int {
	return xxx_messageInfo_SBStatus.Size(m)
}
func (m *SBStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SBStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SBStatus proto.InternalMessageInfo

func (m *SBStatus) GetLeader() uint64 {
	if m != nil {
		return m.Leader
	}
	return 0
}

func init() {
	proto.RegisterType((*ISSMessage)(nil), "isspb.ISSMessage")
	proto.RegisterType((*SBMessage)(nil), "isspb.SBMessage")
	proto.RegisterType((*SBInstanceMessage)(nil), "isspb.SBInstanceMessage")
	proto.RegisterType((*ISSEvent)(nil), "isspb.ISSEvent")
	proto.RegisterType((*SBEvent)(nil), "isspb.SBEvent")
	proto.RegisterType((*SBInstanceEvent)(nil), "isspb.SBInstanceEvent")
	proto.RegisterType((*SBCutBatch)(nil), "isspb.SBCutBatch")
	proto.RegisterType((*SBBatchReady)(nil), "isspb.SBBatchReady")
	proto.RegisterType((*SBWaitForRequests)(nil), "isspb.SBWaitForRequests")
	proto.RegisterType((*SBRequestsReady)(nil), "isspb.SBRequestsReady")
	proto.RegisterType((*SBDeliver)(nil), "isspb.SBDeliver")
	proto.RegisterType((*SBMessageReceived)(nil), "isspb.SBMessageReceived")
	proto.RegisterType((*SBPendingRequests)(nil), "isspb.SBPendingRequests")
	proto.RegisterType((*SBTick)(nil), "isspb.SBTick")
	proto.RegisterType((*Status)(nil), "isspb.Status")
	proto.RegisterType((*SBStatus)(nil), "isspb.SBStatus")
}

func init() { proto.RegisterFile("isspb/isspb.proto", fileDescriptor_67c987db0a07e2d8) }

var fileDescriptor_67c987db0a07e2d8 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xfb, 0x6f, 0xd3, 0x30,
	0x10, 0xee, 0xb2, 0x3e, 0xb2, 0x1b, 0x6b, 0x57, 0x8f, 0x8d, 0x6e, 0xe2, 0x87, 0x12, 0x24, 0x40,
	0x30, 0x5a, 0x36, 0x1e, 0xe2, 0x37, 0x50, 0xc7, 0xa6, 0x4e, 0x80, 0x34, 0x39, 0x68, 0x48, 0x48,
	0x28, 0x4a, 0x52, 0xb7, 0x0d, 0x6b, 0x1e, 0xd8, 0xee, 0x5e, 0xff, 0x1f, 0xff, 0x17, 0xf2, 0x23,
	0x6e, 0x9b, 0x0a, 0x84, 0x90, 0xa6, 0xd5, 0xbe, 0xef, 0xbb, 0xf3, 0xdd, 0xf9, 0x3b, 0x07, 0x9a,
	0x11, 0x63, 0x59, 0xd0, 0x95, 0xff, 0x3b, 0x19, 0x4d, 0x79, 0x8a, 0x2a, 0x72, 0xb3, 0xb7, 0x2b,
	0x7f, 0x86, 0x3c, 0x47, 0xc5, 0x4a, 0x31, 0xf6, 0x76, 0x29, 0xf9, 0x39, 0x25, 0x4c, 0x40, 0x66,
	0xa5, 0x20, 0xe7, 0x2d, 0xc0, 0xa9, 0xeb, 0x7e, 0x26, 0x8c, 0xf9, 0x23, 0x82, 0x1c, 0xb0, 0x58,
	0xd0, 0x5a, 0x69, 0xaf, 0x3c, 0x59, 0x3f, 0xdc, 0xec, 0xa8, 0x43, 0xdc, 0x9e, 0x46, 0xfb, 0x25,
	0x6c, 0xb1, 0xa0, 0x57, 0x85, 0x32, 0xbf, 0xc9, 0x88, 0x13, 0xc1, 0x9a, 0x81, 0xd0, 0x5d, 0xa8,
	0x90, 0x2c, 0x0d, 0xc7, 0xd2, 0xb7, 0x8c, 0xd5, 0x06, 0xed, 0x81, 0x1d, 0x25, 0x8c, 0xfb, 0x49,
	0x48, 0x5a, 0x96, 0x04, 0xcc, 0x1e, 0x3d, 0x85, 0xd5, 0x98, 0x8d, 0x5a, 0xab, 0xf2, 0xac, 0x96,
	0x39, 0xeb, 0x54, 0xe3, 0x3a, 0x30, 0x16, 0x24, 0xe7, 0x3b, 0x34, 0x97, 0x10, 0xf4, 0x1e, 0x1a,
	0xa2, 0x48, 0x2f, 0xa3, 0x44, 0xfc, 0xf9, 0x94, 0xe8, 0x60, 0xdb, 0x9d, 0x59, 0xfd, 0x67, 0x06,
	0xec, 0x97, 0x70, 0x5d, 0x18, 0x67, 0x16, 0x53, 0xc9, 0x2b, 0xb0, 0x4f, 0x5d, 0xf7, 0xf8, 0x92,
	0x24, 0x1c, 0xb5, 0xe7, 0x3a, 0x50, 0x37, 0x59, 0x49, 0x6c, 0xa9, 0xfe, 0x9a, 0x06, 0xfe, 0xa3,
	0xfa, 0x7d, 0xa8, 0x10, 0xe1, 0xaa, 0x53, 0xde, 0x59, 0xaa, 0x5f, 0x06, 0xc6, 0x8a, 0xe4, 0xfc,
	0x2a, 0x43, 0xa3, 0x00, 0xa1, 0x7d, 0xa8, 0x0d, 0xc8, 0x24, 0xba, 0x24, 0x74, 0xe9, 0xbe, 0x3e,
	0x28, 0x7b, 0xbf, 0x84, 0x73, 0x0a, 0x3a, 0x86, 0xcd, 0x58, 0xf5, 0xcd, 0xa3, 0x24, 0x24, 0xd1,
	0x25, 0x19, 0xc8, 0x9c, 0xe6, 0x5b, 0x9f, 0xb7, 0x5c, 0xe3, 0xfd, 0x12, 0x6e, 0xc4, 0x8b, 0x26,
	0x11, 0x26, 0x23, 0xc9, 0x20, 0x4a, 0x46, 0x9e, 0x16, 0x12, 0x5b, 0xba, 0xc1, 0x33, 0x45, 0xc0,
	0x1a, 0x17, 0x61, 0xb2, 0x45, 0x13, 0x7a, 0x08, 0x65, 0x1e, 0x85, 0x17, 0xad, 0xb2, 0x74, 0xdd,
	0x30, 0xae, 0x5f, 0xa2, 0xf0, 0xa2, 0x5f, 0xc2, 0x12, 0x44, 0x2f, 0x60, 0x2d, 0x9c, 0x72, 0x2f,
	0xf0, 0x79, 0x38, 0x6e, 0x55, 0x24, 0xb3, 0x69, 0x98, 0x47, 0x53, 0xde, 0x13, 0x40, 0xbf, 0x84,
	0xed, 0x50, 0xaf, 0xd1, 0x1b, 0x58, 0x97, 0x6c, 0x8f, 0x12, 0x7f, 0x70, 0xd3, 0xaa, 0x4a, 0x9f,
	0x2d, 0xe3, 0x23, 0x49, 0x58, 0x40, 0xfd, 0x12, 0x86, 0xc0, 0xec, 0xd0, 0x09, 0x34, 0xaf, 0xfc,
	0x88, 0x7b, 0xc3, 0x94, 0xce, 0xca, 0xaa, 0x15, 0xca, 0xfa, 0xea, 0x47, 0xfc, 0x24, 0xa5, 0xf3,
	0x65, 0x5d, 0x2d, 0x9a, 0xd0, 0x3b, 0xa8, 0xe7, 0xee, 0x3a, 0x05, 0xbb, 0x70, 0xbb, 0x39, 0x35,
	0xcf, 0x62, 0x83, 0xce, 0x1b, 0xd0, 0x39, 0xdc, 0x53, 0x92, 0x26, 0x94, 0x45, 0x6c, 0x41, 0xda,
	0x6b, 0x32, 0xd2, 0xfd, 0x79, 0x69, 0x2b, 0xd2, 0x82, 0xc2, 0xb7, 0xa5, 0xc2, 0x8b, 0x80, 0x91,
	0xec, 0x63, 0x80, 0x59, 0xeb, 0xd0, 0x2e, 0xd8, 0xb1, 0x7f, 0xed, 0xb1, 0xe8, 0x96, 0x68, 0xe1,
	0xd6, 0x62, 0xff, 0xda, 0x8d, 0x6e, 0x89, 0xf3, 0x03, 0xee, 0xcc, 0xf7, 0x0b, 0x3d, 0x82, 0x8a,
	0xba, 0x87, 0x5c, 0x6a, 0xb3, 0x67, 0x44, 0xb1, 0x14, 0x8c, 0x0e, 0x61, 0xbb, 0xa8, 0x0f, 0x6f,
	0x42, 0x86, 0x5c, 0xeb, 0x7f, 0xab, 0x20, 0x84, 0x4f, 0x64, 0xc8, 0x9d, 0x73, 0x31, 0xdc, 0x85,
	0xee, 0xa2, 0x3a, 0x58, 0x2c, 0xd1, 0x59, 0x59, 0x2c, 0x41, 0x07, 0x60, 0x9b, 0x9b, 0xb1, 0xda,
	0xab, 0x72, 0xca, 0x67, 0x39, 0x68, 0x37, 0x4c, 0x86, 0xd8, 0xd0, 0x9c, 0x07, 0x62, 0x66, 0x16,
	0x1a, 0x5e, 0x8c, 0xea, 0x1c, 0x89, 0x27, 0x4c, 0x4f, 0xcb, 0xd2, 0x91, 0xa6, 0x66, 0xeb, 0xaf,
	0x35, 0x3b, 0xae, 0xc8, 0xbf, 0x30, 0x3b, 0x08, 0x41, 0x79, 0x48, 0xd3, 0x58, 0x87, 0x93, 0xeb,
	0xfc, 0xc5, 0xb3, 0xfe, 0xe5, 0xc5, 0x7b, 0x2d, 0x82, 0x16, 0x26, 0x09, 0xb5, 0x61, 0x3d, 0x99,
	0xc6, 0xf9, 0x56, 0xc7, 0x9e, 0x37, 0x39, 0x36, 0x54, 0xd5, 0x14, 0x39, 0x1f, 0xa1, 0xea, 0x72,
	0x9f, 0x4f, 0xd9, 0x1f, 0x1e, 0xa7, 0x67, 0x60, 0xa7, 0x74, 0x40, 0x28, 0xa1, 0x79, 0x43, 0x1b,
	0x26, 0x23, 0xe5, 0x88, 0x0d, 0xc1, 0x71, 0xc0, 0xce, 0xad, 0x68, 0x07, 0xaa, 0x13, 0xe2, 0x0f,
	0xf4, 0xb3, 0x53, 0xc6, 0x7a, 0xd7, 0x3b, 0xf8, 0xd6, 0x1d, 0x45, 0x7c, 0x3c, 0x0d, 0x3a, 0x61,
	0x1a, 0x77, 0xc7, 0x37, 0x19, 0xa1, 0x13, 0x32, 0x18, 0x11, 0xfa, 0x7c, 0xe2, 0x07, 0xac, 0x1b,
	0x47, 0x34, 0x18, 0xf2, 0x6e, 0x76, 0x31, 0xea, 0xe6, 0x1f, 0xa8, 0xa0, 0x2a, 0x3f, 0x41, 0x2f,
	0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x09, 0xca, 0x26, 0xd4, 0x06, 0x00, 0x00,
}
