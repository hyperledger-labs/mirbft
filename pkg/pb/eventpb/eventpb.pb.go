//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: eventpb/eventpb.proto

package eventpb

import (
	messagepb "github.com/hyperledger-labs/mirbft/pkg/pb/messagepb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event represents a state event to be injected into the state machine
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO, normalize naming, for instance Complete/Completed
	//
	// Types that are assignable to Type:
	//	*Event_Message
	//	*Event_Request
	//	*Event_HashRequest
	//	*Event_HashResult
	//	*Event_Tick
	//	*Event_RequestReady
	//	*Event_SendMessage
	//	*Event_MessageReceived
	//	*Event_WalEntry
	//	*Event_PersistDummyBatch
	//	*Event_AnnounceDummyBatch
	Type isEvent_Type `protobuf_oneof:"type"`
	// A list of follow-up events to process after this event has been processed.
	// This field is used if events need to be processed in a particular order.
	// For example, a message sending event must only be processed
	// after the corresponding entry has been persisted in the write-ahead log (WAL).
	// In this case, the WAL append event would be this event
	// and the next field would contain the message sending event.
	Next []*Event `protobuf:"bytes,100,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetMessage() *Message {
	if x, ok := x.GetType().(*Event_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Event) GetRequest() *messagepb.Request {
	if x, ok := x.GetType().(*Event_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Event) GetHashRequest() *HashRequest {
	if x, ok := x.GetType().(*Event_HashRequest); ok {
		return x.HashRequest
	}
	return nil
}

func (x *Event) GetHashResult() *HashResult {
	if x, ok := x.GetType().(*Event_HashResult); ok {
		return x.HashResult
	}
	return nil
}

func (x *Event) GetTick() *Tick {
	if x, ok := x.GetType().(*Event_Tick); ok {
		return x.Tick
	}
	return nil
}

func (x *Event) GetRequestReady() *RequestReady {
	if x, ok := x.GetType().(*Event_RequestReady); ok {
		return x.RequestReady
	}
	return nil
}

func (x *Event) GetSendMessage() *SendMessage {
	if x, ok := x.GetType().(*Event_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *Event) GetMessageReceived() *MessageReceived {
	if x, ok := x.GetType().(*Event_MessageReceived); ok {
		return x.MessageReceived
	}
	return nil
}

func (x *Event) GetWalEntry() *WALEntry {
	if x, ok := x.GetType().(*Event_WalEntry); ok {
		return x.WalEntry
	}
	return nil
}

func (x *Event) GetPersistDummyBatch() *PersistDummyBatch {
	if x, ok := x.GetType().(*Event_PersistDummyBatch); ok {
		return x.PersistDummyBatch
	}
	return nil
}

func (x *Event) GetAnnounceDummyBatch() *AnnounceDummyBatch {
	if x, ok := x.GetType().(*Event_AnnounceDummyBatch); ok {
		return x.AnnounceDummyBatch
	}
	return nil
}

func (x *Event) GetNext() []*Event {
	if x != nil {
		return x.Next
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_Message struct {
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type Event_Request struct {
	Request *messagepb.Request `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

type Event_HashRequest struct {
	HashRequest *HashRequest `protobuf:"bytes,3,opt,name=hash_request,json=hashRequest,proto3,oneof"`
}

type Event_HashResult struct {
	HashResult *HashResult `protobuf:"bytes,4,opt,name=hash_result,json=hashResult,proto3,oneof"`
}

type Event_Tick struct {
	Tick *Tick `protobuf:"bytes,5,opt,name=tick,proto3,oneof"`
}

type Event_RequestReady struct {
	RequestReady *RequestReady `protobuf:"bytes,6,opt,name=request_ready,json=requestReady,proto3,oneof"`
}

type Event_SendMessage struct {
	SendMessage *SendMessage `protobuf:"bytes,7,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type Event_MessageReceived struct {
	MessageReceived *MessageReceived `protobuf:"bytes,8,opt,name=message_received,json=messageReceived,proto3,oneof"`
}

type Event_WalEntry struct {
	WalEntry *WALEntry `protobuf:"bytes,9,opt,name=wal_entry,json=walEntry,proto3,oneof"`
}

type Event_PersistDummyBatch struct {
	// Dummy events for testing purposes only.
	PersistDummyBatch *PersistDummyBatch `protobuf:"bytes,101,opt,name=persist_dummy_batch,json=persistDummyBatch,proto3,oneof"`
}

type Event_AnnounceDummyBatch struct {
	AnnounceDummyBatch *AnnounceDummyBatch `protobuf:"bytes,102,opt,name=announce_dummy_batch,json=announceDummyBatch,proto3,oneof"`
}

func (*Event_Message) isEvent_Type() {}

func (*Event_Request) isEvent_Type() {}

func (*Event_HashRequest) isEvent_Type() {}

func (*Event_HashResult) isEvent_Type() {}

func (*Event_Tick) isEvent_Type() {}

func (*Event_RequestReady) isEvent_Type() {}

func (*Event_SendMessage) isEvent_Type() {}

func (*Event_MessageReceived) isEvent_Type() {}

func (*Event_WalEntry) isEvent_Type() {}

func (*Event_PersistDummyBatch) isEvent_Type() {}

func (*Event_AnnounceDummyBatch) isEvent_Type() {}

type Tick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Tick) Reset() {
	*x = Tick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{1}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source uint64             `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`
	Msg    *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *Message) GetMsg() *messagepb.Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type HashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   [][]byte    `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Origin *HashOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *HashRequest) Reset() {
	*x = HashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashRequest) ProtoMessage() {}

func (x *HashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashRequest.ProtoReflect.Descriptor instead.
func (*HashRequest) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{3}
}

func (x *HashRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HashRequest) GetOrigin() *HashOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type HashResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte      `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Origin *HashOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *HashResult) Reset() {
	*x = HashResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult) ProtoMessage() {}

func (x *HashResult) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult.ProtoReflect.Descriptor instead.
func (*HashResult) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{4}
}

func (x *HashResult) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *HashResult) GetOrigin() *HashOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type HashOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*HashOrigin_Request
	Type isHashOrigin_Type `protobuf_oneof:"type"`
}

func (x *HashOrigin) Reset() {
	*x = HashOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashOrigin) ProtoMessage() {}

func (x *HashOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashOrigin.ProtoReflect.Descriptor instead.
func (*HashOrigin) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{5}
}

func (m *HashOrigin) GetType() isHashOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HashOrigin) GetRequest() *messagepb.Request {
	if x, ok := x.GetType().(*HashOrigin_Request); ok {
		return x.Request
	}
	return nil
}

type isHashOrigin_Type interface {
	isHashOrigin_Type()
}

type HashOrigin_Request struct {
	Request *messagepb.Request `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

func (*HashOrigin_Request) isHashOrigin_Type() {}

type RequestReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestRef *messagepb.RequestRef `protobuf:"bytes,1,opt,name=request_ref,json=requestRef,proto3" json:"request_ref,omitempty"`
}

func (x *RequestReady) Reset() {
	*x = RequestReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReady) ProtoMessage() {}

func (x *RequestReady) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReady.ProtoReflect.Descriptor instead.
func (*RequestReady) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{6}
}

func (x *RequestReady) GetRequestRef() *messagepb.RequestRef {
	if x != nil {
		return x.RequestRef
	}
	return nil
}

type PersistDummyBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn    uint64           `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Batch *messagepb.Batch `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *PersistDummyBatch) Reset() {
	*x = PersistDummyBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistDummyBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistDummyBatch) ProtoMessage() {}

func (x *PersistDummyBatch) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistDummyBatch.ProtoReflect.Descriptor instead.
func (*PersistDummyBatch) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{7}
}

func (x *PersistDummyBatch) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *PersistDummyBatch) GetBatch() *messagepb.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type AnnounceDummyBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn    uint64           `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Batch *messagepb.Batch `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *AnnounceDummyBatch) Reset() {
	*x = AnnounceDummyBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceDummyBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceDummyBatch) ProtoMessage() {}

func (x *AnnounceDummyBatch) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceDummyBatch.ProtoReflect.Descriptor instead.
func (*AnnounceDummyBatch) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{8}
}

func (x *AnnounceDummyBatch) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *AnnounceDummyBatch) GetBatch() *messagepb.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type SendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destinations []uint64           `protobuf:"varint,1,rep,packed,name=destinations,proto3" json:"destinations,omitempty"`
	Msg          *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendMessage) Reset() {
	*x = SendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessage) ProtoMessage() {}

func (x *SendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessage.ProtoReflect.Descriptor instead.
func (*SendMessage) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{9}
}

func (x *SendMessage) GetDestinations() []uint64 {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *SendMessage) GetMsg() *messagepb.Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type MessageReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From uint64             `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Msg  *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageReceived) Reset() {
	*x = MessageReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceived) ProtoMessage() {}

func (x *MessageReceived) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceived.ProtoReflect.Descriptor instead.
func (*MessageReceived) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{10}
}

func (x *MessageReceived) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *MessageReceived) GetMsg() *messagepb.Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type WALEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{11}
}

func (x *WALEntry) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_eventpb_eventpb_proto protoreflect.FileDescriptor

var file_eventpb_eventpb_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x05, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4c, 0x0a,
	0x13, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x44, 0x75, 0x6d, 0x6d,
	0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x4f, 0x0a, 0x14, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x44, 0x75, 0x6d, 0x6d,
	0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x54, 0x69, 0x63, 0x6b,
	0x22, 0x47, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4e, 0x0a, 0x0b, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x51, 0x0a, 0x0a, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x44, 0x0a, 0x0a,
	0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x22, 0x4b, 0x0a, 0x11, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x12,
	0x26, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x26, 0x0a,
	0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x57, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4b,
	0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30, 0x0a, 0x08, 0x57,
	0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x33, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x69, 0x72,
	0x62, 0x66, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eventpb_eventpb_proto_rawDescOnce sync.Once
	file_eventpb_eventpb_proto_rawDescData = file_eventpb_eventpb_proto_rawDesc
)

func file_eventpb_eventpb_proto_rawDescGZIP() []byte {
	file_eventpb_eventpb_proto_rawDescOnce.Do(func() {
		file_eventpb_eventpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventpb_eventpb_proto_rawDescData)
	})
	return file_eventpb_eventpb_proto_rawDescData
}

var file_eventpb_eventpb_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_eventpb_eventpb_proto_goTypes = []interface{}{
	(*Event)(nil),                // 0: eventpb.Event
	(*Tick)(nil),                 // 1: eventpb.Tick
	(*Message)(nil),              // 2: eventpb.Message
	(*HashRequest)(nil),          // 3: eventpb.HashRequest
	(*HashResult)(nil),           // 4: eventpb.HashResult
	(*HashOrigin)(nil),           // 5: eventpb.HashOrigin
	(*RequestReady)(nil),         // 6: eventpb.RequestReady
	(*PersistDummyBatch)(nil),    // 7: eventpb.PersistDummyBatch
	(*AnnounceDummyBatch)(nil),   // 8: eventpb.AnnounceDummyBatch
	(*SendMessage)(nil),          // 9: eventpb.SendMessage
	(*MessageReceived)(nil),      // 10: eventpb.MessageReceived
	(*WALEntry)(nil),             // 11: eventpb.WALEntry
	(*messagepb.Request)(nil),    // 12: messagepb.Request
	(*messagepb.Message)(nil),    // 13: messagepb.Message
	(*messagepb.RequestRef)(nil), // 14: messagepb.RequestRef
	(*messagepb.Batch)(nil),      // 15: messagepb.Batch
}
var file_eventpb_eventpb_proto_depIdxs = []int32{
	2,  // 0: eventpb.Event.message:type_name -> eventpb.Message
	12, // 1: eventpb.Event.request:type_name -> messagepb.Request
	3,  // 2: eventpb.Event.hash_request:type_name -> eventpb.HashRequest
	4,  // 3: eventpb.Event.hash_result:type_name -> eventpb.HashResult
	1,  // 4: eventpb.Event.tick:type_name -> eventpb.Tick
	6,  // 5: eventpb.Event.request_ready:type_name -> eventpb.RequestReady
	9,  // 6: eventpb.Event.send_message:type_name -> eventpb.SendMessage
	10, // 7: eventpb.Event.message_received:type_name -> eventpb.MessageReceived
	11, // 8: eventpb.Event.wal_entry:type_name -> eventpb.WALEntry
	7,  // 9: eventpb.Event.persist_dummy_batch:type_name -> eventpb.PersistDummyBatch
	8,  // 10: eventpb.Event.announce_dummy_batch:type_name -> eventpb.AnnounceDummyBatch
	0,  // 11: eventpb.Event.next:type_name -> eventpb.Event
	13, // 12: eventpb.Message.msg:type_name -> messagepb.Message
	5,  // 13: eventpb.HashRequest.origin:type_name -> eventpb.HashOrigin
	5,  // 14: eventpb.HashResult.origin:type_name -> eventpb.HashOrigin
	12, // 15: eventpb.HashOrigin.request:type_name -> messagepb.Request
	14, // 16: eventpb.RequestReady.request_ref:type_name -> messagepb.RequestRef
	15, // 17: eventpb.PersistDummyBatch.batch:type_name -> messagepb.Batch
	15, // 18: eventpb.AnnounceDummyBatch.batch:type_name -> messagepb.Batch
	13, // 19: eventpb.SendMessage.msg:type_name -> messagepb.Message
	13, // 20: eventpb.MessageReceived.msg:type_name -> messagepb.Message
	0,  // 21: eventpb.WALEntry.event:type_name -> eventpb.Event
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_eventpb_eventpb_proto_init() }
func file_eventpb_eventpb_proto_init() {
	if File_eventpb_eventpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eventpb_eventpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistDummyBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceDummyBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventpb_eventpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Message)(nil),
		(*Event_Request)(nil),
		(*Event_HashRequest)(nil),
		(*Event_HashResult)(nil),
		(*Event_Tick)(nil),
		(*Event_RequestReady)(nil),
		(*Event_SendMessage)(nil),
		(*Event_MessageReceived)(nil),
		(*Event_WalEntry)(nil),
		(*Event_PersistDummyBatch)(nil),
		(*Event_AnnounceDummyBatch)(nil),
	}
	file_eventpb_eventpb_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*HashOrigin_Request)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventpb_eventpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eventpb_eventpb_proto_goTypes,
		DependencyIndexes: file_eventpb_eventpb_proto_depIdxs,
		MessageInfos:      file_eventpb_eventpb_proto_msgTypes,
	}.Build()
	File_eventpb_eventpb_proto = out.File
	file_eventpb_eventpb_proto_rawDesc = nil
	file_eventpb_eventpb_proto_goTypes = nil
	file_eventpb_eventpb_proto_depIdxs = nil
}
