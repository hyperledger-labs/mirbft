// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpctransport/grpctransport.proto

package grpctransport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	messagepb "github.com/hyperledger-labs/mirbft/pkg/pb/messagepb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcMessage struct {
	Sender               uint64             `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Msg                  *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GrpcMessage) Reset()         { *m = GrpcMessage{} }
func (m *GrpcMessage) String() string { return proto.CompactTextString(m) }
func (*GrpcMessage) ProtoMessage()    {}
func (*GrpcMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d027df42da2fc781, []int{0}
}

func (m *GrpcMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcMessage.Unmarshal(m, b)
}
func (m *GrpcMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcMessage.Marshal(b, m, deterministic)
}
func (m *GrpcMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcMessage.Merge(m, src)
}
func (m *GrpcMessage) XXX_Size() int {
	return xxx_messageInfo_GrpcMessage.Size(m)
}
func (m *GrpcMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcMessage proto.InternalMessageInfo

func (m *GrpcMessage) GetSender() uint64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *GrpcMessage) GetMsg() *messagepb.Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

type ByeBye struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByeBye) Reset()         { *m = ByeBye{} }
func (m *ByeBye) String() string { return proto.CompactTextString(m) }
func (*ByeBye) ProtoMessage()    {}
func (*ByeBye) Descriptor() ([]byte, []int) {
	return fileDescriptor_d027df42da2fc781, []int{1}
}

func (m *ByeBye) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByeBye.Unmarshal(m, b)
}
func (m *ByeBye) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByeBye.Marshal(b, m, deterministic)
}
func (m *ByeBye) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByeBye.Merge(m, src)
}
func (m *ByeBye) XXX_Size() int {
	return xxx_messageInfo_ByeBye.Size(m)
}
func (m *ByeBye) XXX_DiscardUnknown() {
	xxx_messageInfo_ByeBye.DiscardUnknown(m)
}

var xxx_messageInfo_ByeBye proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GrpcMessage)(nil), "grpctransport.GrpcMessage")
	proto.RegisterType((*ByeBye)(nil), "grpctransport.ByeBye")
}

func init() { proto.RegisterFile("grpctransport/grpctransport.proto", fileDescriptor_d027df42da2fc781) }

var fileDescriptor_d027df42da2fc781 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0x2f, 0x2a, 0x48,
	0x2e, 0x29, 0x4a, 0xcc, 0x2b, 0x2e, 0xc8, 0x2f, 0x2a, 0xd1, 0x47, 0xe1, 0xe9, 0x15, 0x14, 0xe5,
	0x97, 0xe4, 0x0b, 0xf1, 0xa2, 0x08, 0x4a, 0x49, 0xe6, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x16,
	0x24, 0xe9, 0xc3, 0x59, 0x10, 0x95, 0x4a, 0xde, 0x5c, 0xdc, 0xee, 0x45, 0x05, 0xc9, 0xbe, 0x10,
	0x61, 0x21, 0x31, 0x2e, 0xb6, 0xe2, 0xd4, 0xbc, 0x94, 0xd4, 0x22, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0x96, 0x20, 0x28, 0x4f, 0x48, 0x85, 0x8b, 0x39, 0xb7, 0x38, 0x5d, 0x82, 0x49, 0x81, 0x51, 0x83,
	0xdb, 0x48, 0x48, 0x0f, 0x61, 0x0a, 0x54, 0x63, 0x10, 0x48, 0x5a, 0x89, 0x83, 0x8b, 0xcd, 0xa9,
	0x32, 0xd5, 0xa9, 0x32, 0xd5, 0xc8, 0x8f, 0x8b, 0x17, 0x64, 0x6c, 0x08, 0xcc, 0x09, 0x42, 0xb6,
	0x5c, 0x6c, 0x3e, 0x99, 0xc5, 0x25, 0xa9, 0x79, 0x42, 0x52, 0x7a, 0xa8, 0x2e, 0x46, 0xb2, 0x5e,
	0x4a, 0x14, 0x4d, 0x0e, 0x62, 0x9a, 0x06, 0xa3, 0x93, 0x59, 0x94, 0x49, 0x7a, 0x66, 0x49, 0x46,
	0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x46, 0x65, 0x41, 0x6a, 0x51, 0x4e, 0x6a, 0x4a, 0x7a,
	0x6a, 0x91, 0x6e, 0x4e, 0x62, 0x52, 0xb1, 0x7e, 0x6e, 0x66, 0x51, 0x52, 0x5a, 0x89, 0x7e, 0x41,
	0x76, 0x3a, 0x6a, 0x70, 0x24, 0xb1, 0x81, 0x7d, 0x69, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa0,
	0x69, 0x2c, 0x4c, 0x34, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcTransportClient is the client API for GrpcTransport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcTransportClient interface {
	Listen(ctx context.Context, opts ...grpc.CallOption) (GrpcTransport_ListenClient, error)
}

type grpcTransportClient struct {
	cc *grpc.ClientConn
}

func NewGrpcTransportClient(cc *grpc.ClientConn) GrpcTransportClient {
	return &grpcTransportClient{cc}
}

func (c *grpcTransportClient) Listen(ctx context.Context, opts ...grpc.CallOption) (GrpcTransport_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcTransport_serviceDesc.Streams[0], "/grpctransport.GrpcTransport/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcTransportListenClient{stream}
	return x, nil
}

type GrpcTransport_ListenClient interface {
	Send(*GrpcMessage) error
	CloseAndRecv() (*ByeBye, error)
	grpc.ClientStream
}

type grpcTransportListenClient struct {
	grpc.ClientStream
}

func (x *grpcTransportListenClient) Send(m *GrpcMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *grpcTransportListenClient) CloseAndRecv() (*ByeBye, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ByeBye)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GrpcTransportServer is the server API for GrpcTransport service.
type GrpcTransportServer interface {
	Listen(GrpcTransport_ListenServer) error
}

// UnimplementedGrpcTransportServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcTransportServer struct {
}

func (*UnimplementedGrpcTransportServer) Listen(srv GrpcTransport_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterGrpcTransportServer(s *grpc.Server, srv GrpcTransportServer) {
	s.RegisterService(&_GrpcTransport_serviceDesc, srv)
}

func _GrpcTransport_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GrpcTransportServer).Listen(&grpcTransportListenServer{stream})
}

type GrpcTransport_ListenServer interface {
	SendAndClose(*ByeBye) error
	Recv() (*GrpcMessage, error)
	grpc.ServerStream
}

type grpcTransportListenServer struct {
	grpc.ServerStream
}

func (x *grpcTransportListenServer) SendAndClose(m *ByeBye) error {
	return x.ServerStream.SendMsg(m)
}

func (x *grpcTransportListenServer) Recv() (*GrpcMessage, error) {
	m := new(GrpcMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GrpcTransport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpctransport.GrpcTransport",
	HandlerType: (*GrpcTransportServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _GrpcTransport_Listen_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "grpctransport/grpctransport.proto",
}
