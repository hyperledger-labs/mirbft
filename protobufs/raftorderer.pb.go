// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftorderer.proto

package protobufs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RaftVoteRequest struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId          int32    `protobuf:"varint,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastSn               int32    `protobuf:"varint,3,opt,name=last_sn,json=lastSn,proto3" json:"last_sn,omitempty"`
	LastTerm             int32    `protobuf:"varint,4,opt,name=last_term,json=lastTerm,proto3" json:"last_term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftVoteRequest) Reset()         { *m = RaftVoteRequest{} }
func (m *RaftVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RaftVoteRequest) ProtoMessage()    {}
func (*RaftVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d01cb38637177e, []int{0}
}

func (m *RaftVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftVoteRequest.Unmarshal(m, b)
}
func (m *RaftVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftVoteRequest.Marshal(b, m, deterministic)
}
func (m *RaftVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftVoteRequest.Merge(m, src)
}
func (m *RaftVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RaftVoteRequest.Size(m)
}
func (m *RaftVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RaftVoteRequest proto.InternalMessageInfo

func (m *RaftVoteRequest) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftVoteRequest) GetCandidateId() int32 {
	if m != nil {
		return m.CandidateId
	}
	return 0
}

func (m *RaftVoteRequest) GetLastSn() int32 {
	if m != nil {
		return m.LastSn
	}
	return 0
}

func (m *RaftVoteRequest) GetLastTerm() int32 {
	if m != nil {
		return m.LastTerm
	}
	return 0
}

type RaftVoteResponse struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId          int32    `protobuf:"varint,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	VoteGranted          bool     `protobuf:"varint,3,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftVoteResponse) Reset()         { *m = RaftVoteResponse{} }
func (m *RaftVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RaftVoteResponse) ProtoMessage()    {}
func (*RaftVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d01cb38637177e, []int{1}
}

func (m *RaftVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftVoteResponse.Unmarshal(m, b)
}
func (m *RaftVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftVoteResponse.Marshal(b, m, deterministic)
}
func (m *RaftVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftVoteResponse.Merge(m, src)
}
func (m *RaftVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RaftVoteResponse.Size(m)
}
func (m *RaftVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RaftVoteResponse proto.InternalMessageInfo

func (m *RaftVoteResponse) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftVoteResponse) GetCandidateId() int32 {
	if m != nil {
		return m.CandidateId
	}
	return 0
}

func (m *RaftVoteResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type RaftAppendEntryRequest struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term                 int32    `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	PrevIndex            int32    `protobuf:"varint,3,opt,name=prev_index,json=prevIndex,proto3" json:"prev_index,omitempty"`
	PrevTerm             int32    `protobuf:"varint,4,opt,name=prev_term,json=prevTerm,proto3" json:"prev_term,omitempty"`
	Batch                *Batch   `protobuf:"bytes,5,opt,name=batch,proto3" json:"batch,omitempty"`
	LeaderCommit         int32    `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	Aborted              bool     `protobuf:"varint,7,opt,name=aborted,proto3" json:"aborted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftAppendEntryRequest) Reset()         { *m = RaftAppendEntryRequest{} }
func (m *RaftAppendEntryRequest) String() string { return proto.CompactTextString(m) }
func (*RaftAppendEntryRequest) ProtoMessage()    {}
func (*RaftAppendEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d01cb38637177e, []int{2}
}

func (m *RaftAppendEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftAppendEntryRequest.Unmarshal(m, b)
}
func (m *RaftAppendEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftAppendEntryRequest.Marshal(b, m, deterministic)
}
func (m *RaftAppendEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftAppendEntryRequest.Merge(m, src)
}
func (m *RaftAppendEntryRequest) XXX_Size() int {
	return xxx_messageInfo_RaftAppendEntryRequest.Size(m)
}
func (m *RaftAppendEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftAppendEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RaftAppendEntryRequest proto.InternalMessageInfo

func (m *RaftAppendEntryRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *RaftAppendEntryRequest) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftAppendEntryRequest) GetPrevIndex() int32 {
	if m != nil {
		return m.PrevIndex
	}
	return 0
}

func (m *RaftAppendEntryRequest) GetPrevTerm() int32 {
	if m != nil {
		return m.PrevTerm
	}
	return 0
}

func (m *RaftAppendEntryRequest) GetBatch() *Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *RaftAppendEntryRequest) GetLeaderCommit() int32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

func (m *RaftAppendEntryRequest) GetAborted() bool {
	if m != nil {
		return m.Aborted
	}
	return false
}

type RaftAppendEntryResponse struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term                 int32    `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	NextIndex            int32    `protobuf:"varint,4,opt,name=nextIndex,proto3" json:"nextIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftAppendEntryResponse) Reset()         { *m = RaftAppendEntryResponse{} }
func (m *RaftAppendEntryResponse) String() string { return proto.CompactTextString(m) }
func (*RaftAppendEntryResponse) ProtoMessage()    {}
func (*RaftAppendEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d01cb38637177e, []int{3}
}

func (m *RaftAppendEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftAppendEntryResponse.Unmarshal(m, b)
}
func (m *RaftAppendEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftAppendEntryResponse.Marshal(b, m, deterministic)
}
func (m *RaftAppendEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftAppendEntryResponse.Merge(m, src)
}
func (m *RaftAppendEntryResponse) XXX_Size() int {
	return xxx_messageInfo_RaftAppendEntryResponse.Size(m)
}
func (m *RaftAppendEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftAppendEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RaftAppendEntryResponse proto.InternalMessageInfo

func (m *RaftAppendEntryResponse) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *RaftAppendEntryResponse) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftAppendEntryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RaftAppendEntryResponse) GetNextIndex() int32 {
	if m != nil {
		return m.NextIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*RaftVoteRequest)(nil), "protobufs.RaftVoteRequest")
	proto.RegisterType((*RaftVoteResponse)(nil), "protobufs.RaftVoteResponse")
	proto.RegisterType((*RaftAppendEntryRequest)(nil), "protobufs.RaftAppendEntryRequest")
	proto.RegisterType((*RaftAppendEntryResponse)(nil), "protobufs.RaftAppendEntryResponse")
}

func init() {
	proto.RegisterFile("raftorderer.proto", fileDescriptor_95d01cb38637177e)
}

var fileDescriptor_95d01cb38637177e = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x41, 0x6b, 0xdb, 0x30,
	0x18, 0x86, 0x71, 0x16, 0xc7, 0xf1, 0x17, 0x67, 0xcb, 0xc4, 0x58, 0xcc, 0xb2, 0x41, 0xe2, 0xc1,
	0xc8, 0xc9, 0x83, 0xed, 0xb8, 0xd3, 0x32, 0xc6, 0xc8, 0xd5, 0x2b, 0x3d, 0xf4, 0x62, 0x64, 0xeb,
	0x4b, 0x6b, 0x88, 0x25, 0x57, 0x52, 0x42, 0x4a, 0xa1, 0xff, 0xb6, 0xff, 0xa3, 0x48, 0x72, 0x9c,
	0x96, 0x5e, 0x4a, 0x4f, 0xd6, 0xfb, 0xbc, 0xb6, 0xf4, 0x3d, 0x32, 0xbc, 0x97, 0x74, 0xa3, 0x85,
	0x64, 0x28, 0x51, 0xa6, 0x8d, 0x14, 0x5a, 0x90, 0xd0, 0x3e, 0x8a, 0xdd, 0x46, 0x7d, 0x1a, 0x4b,
	0xbc, 0xde, 0xa1, 0xd2, 0xae, 0x49, 0xee, 0xe0, 0x5d, 0x46, 0x37, 0xfa, 0x5c, 0x68, 0xcc, 0x5c,
	0x41, 0x08, 0xf4, 0x35, 0xca, 0x3a, 0xf6, 0xe6, 0xde, 0xd2, 0xcf, 0xec, 0x9a, 0x2c, 0x20, 0x2a,
	0x29, 0x67, 0x15, 0xa3, 0x1a, 0xf3, 0x8a, 0xc5, 0x3d, 0xdb, 0x8d, 0x3a, 0xb6, 0x66, 0x64, 0x0a,
	0xc1, 0x96, 0x2a, 0x9d, 0x2b, 0x1e, 0xbf, 0xb1, 0xed, 0xc0, 0xc4, 0xff, 0x9c, 0xcc, 0x20, 0xb4,
	0x85, 0xdd, 0xb4, 0x6f, 0xab, 0xa1, 0x01, 0x67, 0x28, 0xeb, 0x64, 0x0b, 0x93, 0xd3, 0xf9, 0xaa,
	0x11, 0x5c, 0xe1, 0x6b, 0x07, 0x58, 0x40, 0xb4, 0x17, 0x1a, 0xf3, 0x4b, 0x49, 0xb9, 0x46, 0x66,
	0xa7, 0x18, 0x66, 0x23, 0xc3, 0xfe, 0x39, 0x94, 0xdc, 0x7b, 0xf0, 0xd1, 0x1c, 0xf7, 0xbb, 0x69,
	0x90, 0xb3, 0xbf, 0x5c, 0xcb, 0x9b, 0xa3, 0xf5, 0x07, 0xf0, 0x2b, 0xce, 0xf0, 0xd0, 0x9e, 0xea,
	0x42, 0x37, 0x4a, 0xef, 0xd1, 0x28, 0x5f, 0x00, 0x1a, 0x89, 0xfb, 0xdc, 0xbd, 0xee, 0x5c, 0x43,
	0x43, 0xd6, 0xf6, 0x93, 0x19, 0xd8, 0xf0, 0x44, 0xd7, 0x00, 0xa3, 0x4b, 0xbe, 0x81, 0x5f, 0x50,
	0x5d, 0x5e, 0xc5, 0xfe, 0xdc, 0x5b, 0x8e, 0x7e, 0x4c, 0xd2, 0xee, 0xc7, 0xa4, 0x2b, 0xc3, 0x33,
	0x57, 0x93, 0xaf, 0x30, 0xde, 0x22, 0x65, 0x28, 0xf3, 0x52, 0xd4, 0x75, 0xa5, 0xe3, 0x81, 0xdd,
	0x28, 0x72, 0xf0, 0x8f, 0x65, 0x24, 0x86, 0x80, 0x16, 0x42, 0x1a, 0xd7, 0xc0, 0xba, 0x1e, 0x63,
	0x72, 0x0b, 0xd3, 0x67, 0x9a, 0xed, 0xe5, 0xbe, 0xdc, 0x33, 0x86, 0x40, 0xed, 0xca, 0x12, 0x95,
	0x6a, 0xaf, 0xf2, 0x18, 0xc9, 0x67, 0x08, 0x39, 0x1e, 0xb4, 0xf5, 0x6d, 0x15, 0x4f, 0x60, 0xf5,
	0xf6, 0x22, 0x4a, 0xbf, 0xff, 0xea, 0xc4, 0x8a, 0x81, 0x5d, 0xfe, 0x7c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xfa, 0x7d, 0xdf, 0x16, 0x98, 0x02, 0x00, 0x00,
}
