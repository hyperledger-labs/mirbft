// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testservice.proto

package protobufs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestReq struct {
	Sn                   int32    `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReq) Reset()         { *m = TestReq{} }
func (m *TestReq) String() string { return proto.CompactTextString(m) }
func (*TestReq) ProtoMessage()    {}
func (*TestReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_26bc9cfb0d6b6ad9, []int{0}
}

func (m *TestReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReq.Unmarshal(m, b)
}
func (m *TestReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReq.Marshal(b, m, deterministic)
}
func (m *TestReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReq.Merge(m, src)
}
func (m *TestReq) XXX_Size() int {
	return xxx_messageInfo_TestReq.Size(m)
}
func (m *TestReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestReq proto.InternalMessageInfo

func (m *TestReq) GetSn() int32 {
	if m != nil {
		return m.Sn
	}
	return 0
}

func (m *TestReq) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type TestResp struct {
	Sn                   int32    `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResp) Reset()         { *m = TestResp{} }
func (m *TestResp) String() string { return proto.CompactTextString(m) }
func (*TestResp) ProtoMessage()    {}
func (*TestResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_26bc9cfb0d6b6ad9, []int{1}
}

func (m *TestResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResp.Unmarshal(m, b)
}
func (m *TestResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResp.Marshal(b, m, deterministic)
}
func (m *TestResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResp.Merge(m, src)
}
func (m *TestResp) XXX_Size() int {
	return xxx_messageInfo_TestResp.Size(m)
}
func (m *TestResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestResp proto.InternalMessageInfo

func (m *TestResp) GetSn() int32 {
	if m != nil {
		return m.Sn
	}
	return 0
}

func (m *TestResp) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*TestReq)(nil), "protobufs.TestReq")
	proto.RegisterType((*TestResp)(nil), "protobufs.TestResp")
}

func init() {
	proto.RegisterFile("testservice.proto", fileDescriptor_26bc9cfb0d6b6ad9)
}

var fileDescriptor_26bc9cfb0d6b6ad9 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x49, 0x2d, 0x2e,
	0x29, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04,
	0x53, 0x49, 0xa5, 0x69, 0xc5, 0x4a, 0xc6, 0x5c, 0xec, 0x21, 0xa9, 0xc5, 0x25, 0x41, 0xa9, 0x85,
	0x42, 0x7c, 0x5c, 0x4c, 0xc5, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x4c, 0xc5, 0x79,
	0x42, 0x12, 0x5c, 0xec, 0x05, 0x89, 0x95, 0x39, 0xf9, 0x89, 0x29, 0x12, 0x4c, 0x0a, 0x8c, 0x1a,
	0x3c, 0x41, 0x30, 0xae, 0x92, 0x09, 0x17, 0x07, 0x44, 0x53, 0x71, 0x01, 0xf1, 0xba, 0x8c, 0x9c,
	0xb8, 0xb8, 0x41, 0xba, 0x82, 0x21, 0x4e, 0x11, 0x32, 0xe6, 0x62, 0x01, 0x71, 0x85, 0x84, 0xf4,
	0xe0, 0xae, 0xd1, 0x83, 0x3a, 0x45, 0x4a, 0x18, 0x43, 0xac, 0xb8, 0x40, 0x83, 0xd1, 0x80, 0xd1,
	0x89, 0x2f, 0x8a, 0x47, 0x4f, 0xdf, 0x1a, 0x2e, 0x99, 0xc4, 0x06, 0x66, 0x1a, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xc3, 0xbd, 0xbc, 0x24, 0xe5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	Test(ctx context.Context, opts ...grpc.CallOption) (TestService_TestClient, error)
}

type testServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTestServiceClient(cc grpc.ClientConnInterface) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) Test(ctx context.Context, opts ...grpc.CallOption) (TestService_TestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TestService_serviceDesc.Streams[0], "/protobufs.TestService/Test", opts...)
	if err != nil {
		return nil, err
	}
	x := &testServiceTestClient{stream}
	return x, nil
}

type TestService_TestClient interface {
	Send(*TestReq) error
	Recv() (*TestResp, error)
	grpc.ClientStream
}

type testServiceTestClient struct {
	grpc.ClientStream
}

func (x *testServiceTestClient) Send(m *TestReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *testServiceTestClient) Recv() (*TestResp, error) {
	m := new(TestResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	Test(TestService_TestServer) error
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) Test(srv TestService_TestServer) error {
	return status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_Test_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TestServiceServer).Test(&testServiceTestServer{stream})
}

type TestService_TestServer interface {
	Send(*TestResp) error
	Recv() (*TestReq, error)
	grpc.ServerStream
}

type testServiceTestServer struct {
	grpc.ServerStream
}

func (x *testServiceTestServer) Send(m *TestResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *testServiceTestServer) Recv() (*TestReq, error) {
	m := new(TestReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufs.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Test",
			Handler:       _TestService_Test_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "testservice.proto",
}
