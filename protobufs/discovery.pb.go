// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package protobufs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecSignal_Signum int32

const (
	ExecSignal_DEFAULT ExecSignal_Signum = 0
	ExecSignal_SIGHUP  ExecSignal_Signum = 1
	ExecSignal_SIGINT  ExecSignal_Signum = 2
	ExecSignal_SIGKILL ExecSignal_Signum = 9
	ExecSignal_SIGUSR1 ExecSignal_Signum = 10
	ExecSignal_SIGUSR2 ExecSignal_Signum = 12
	ExecSignal_SIGTERM ExecSignal_Signum = 15
)

var ExecSignal_Signum_name = map[int32]string{
	0:  "DEFAULT",
	1:  "SIGHUP",
	2:  "SIGINT",
	9:  "SIGKILL",
	10: "SIGUSR1",
	12: "SIGUSR2",
	15: "SIGTERM",
}

var ExecSignal_Signum_value = map[string]int32{
	"DEFAULT": 0,
	"SIGHUP":  1,
	"SIGINT":  2,
	"SIGKILL": 9,
	"SIGUSR1": 10,
	"SIGUSR2": 12,
	"SIGTERM": 15,
}

func (x ExecSignal_Signum) String() string {
	return proto.EnumName(ExecSignal_Signum_name, int32(x))
}

func (ExecSignal_Signum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{12, 0}
}

type RegisterPeerRequest struct {
	PublicAddr           string   `protobuf:"bytes,1,opt,name=public_addr,json=publicAddr,proto3" json:"public_addr,omitempty"`
	PrivateAddr          string   `protobuf:"bytes,2,opt,name=private_addr,json=privateAddr,proto3" json:"private_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPeerRequest) Reset()         { *m = RegisterPeerRequest{} }
func (m *RegisterPeerRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterPeerRequest) ProtoMessage()    {}
func (*RegisterPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0}
}

func (m *RegisterPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPeerRequest.Unmarshal(m, b)
}
func (m *RegisterPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPeerRequest.Marshal(b, m, deterministic)
}
func (m *RegisterPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPeerRequest.Merge(m, src)
}
func (m *RegisterPeerRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterPeerRequest.Size(m)
}
func (m *RegisterPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPeerRequest proto.InternalMessageInfo

func (m *RegisterPeerRequest) GetPublicAddr() string {
	if m != nil {
		return m.PublicAddr
	}
	return ""
}

func (m *RegisterPeerRequest) GetPrivateAddr() string {
	if m != nil {
		return m.PrivateAddr
	}
	return ""
}

// Contains identities of all registered peers and
// a newly assigned ID of the requesting peer.
type RegisterPeerResponse struct {
	NewPeerId            int32           `protobuf:"varint,1,opt,name=new_peer_id,json=newPeerId,proto3" json:"new_peer_id,omitempty"`
	PrivKey              []byte          `protobuf:"bytes,2,opt,name=priv_key,json=privKey,proto3" json:"priv_key,omitempty"`
	TblsPubKey           []byte          `protobuf:"bytes,3,opt,name=tbls_pub_key,json=tblsPubKey,proto3" json:"tbls_pub_key,omitempty"`
	TblsPrivKeyShare     []byte          `protobuf:"bytes,4,opt,name=tbls_priv_key_share,json=tblsPrivKeyShare,proto3" json:"tbls_priv_key_share,omitempty"`
	Peers                []*NodeIdentity `protobuf:"bytes,5,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RegisterPeerResponse) Reset()         { *m = RegisterPeerResponse{} }
func (m *RegisterPeerResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterPeerResponse) ProtoMessage()    {}
func (*RegisterPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{1}
}

func (m *RegisterPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPeerResponse.Unmarshal(m, b)
}
func (m *RegisterPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPeerResponse.Marshal(b, m, deterministic)
}
func (m *RegisterPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPeerResponse.Merge(m, src)
}
func (m *RegisterPeerResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterPeerResponse.Size(m)
}
func (m *RegisterPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPeerResponse proto.InternalMessageInfo

func (m *RegisterPeerResponse) GetNewPeerId() int32 {
	if m != nil {
		return m.NewPeerId
	}
	return 0
}

func (m *RegisterPeerResponse) GetPrivKey() []byte {
	if m != nil {
		return m.PrivKey
	}
	return nil
}

func (m *RegisterPeerResponse) GetTblsPubKey() []byte {
	if m != nil {
		return m.TblsPubKey
	}
	return nil
}

func (m *RegisterPeerResponse) GetTblsPrivKeyShare() []byte {
	if m != nil {
		return m.TblsPrivKeyShare
	}
	return nil
}

func (m *RegisterPeerResponse) GetPeers() []*NodeIdentity {
	if m != nil {
		return m.Peers
	}
	return nil
}

type SyncRequest struct {
	PeerId               int32    `protobuf:"varint,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncRequest) Reset()         { *m = SyncRequest{} }
func (m *SyncRequest) String() string { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()    {}
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{2}
}

func (m *SyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRequest.Unmarshal(m, b)
}
func (m *SyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRequest.Marshal(b, m, deterministic)
}
func (m *SyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRequest.Merge(m, src)
}
func (m *SyncRequest) XXX_Size() int {
	return xxx_messageInfo_SyncRequest.Size(m)
}
func (m *SyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRequest proto.InternalMessageInfo

func (m *SyncRequest) GetPeerId() int32 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

type SyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncResponse) Reset()         { *m = SyncResponse{} }
func (m *SyncResponse) String() string { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()    {}
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{3}
}

func (m *SyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResponse.Unmarshal(m, b)
}
func (m *SyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResponse.Marshal(b, m, deterministic)
}
func (m *SyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResponse.Merge(m, src)
}
func (m *SyncResponse) XXX_Size() int {
	return xxx_messageInfo_SyncResponse.Size(m)
}
func (m *SyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResponse proto.InternalMessageInfo

type RegisterClientRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterClientRequest) Reset()         { *m = RegisterClientRequest{} }
func (m *RegisterClientRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterClientRequest) ProtoMessage()    {}
func (*RegisterClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4}
}

func (m *RegisterClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientRequest.Unmarshal(m, b)
}
func (m *RegisterClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientRequest.Marshal(b, m, deterministic)
}
func (m *RegisterClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientRequest.Merge(m, src)
}
func (m *RegisterClientRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterClientRequest.Size(m)
}
func (m *RegisterClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientRequest proto.InternalMessageInfo

// Contains identities of all registered peers and
// a newly assigned ID of the requesting client.
type RegisterClientResponse struct {
	NewClientId          int32           `protobuf:"varint,1,opt,name=new_client_id,json=newClientId,proto3" json:"new_client_id,omitempty"`
	Peers                []*NodeIdentity `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RegisterClientResponse) Reset()         { *m = RegisterClientResponse{} }
func (m *RegisterClientResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterClientResponse) ProtoMessage()    {}
func (*RegisterClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{5}
}

func (m *RegisterClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientResponse.Unmarshal(m, b)
}
func (m *RegisterClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientResponse.Marshal(b, m, deterministic)
}
func (m *RegisterClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientResponse.Merge(m, src)
}
func (m *RegisterClientResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterClientResponse.Size(m)
}
func (m *RegisterClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientResponse proto.InternalMessageInfo

func (m *RegisterClientResponse) GetNewClientId() int32 {
	if m != nil {
		return m.NewClientId
	}
	return 0
}

func (m *RegisterClientResponse) GetPeers() []*NodeIdentity {
	if m != nil {
		return m.Peers
	}
	return nil
}

type SlaveStatus struct {
	CmdId                int32    `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	SlaveId              int32    `protobuf:"varint,2,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Tag                  string   `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaveStatus) Reset()         { *m = SlaveStatus{} }
func (m *SlaveStatus) String() string { return proto.CompactTextString(m) }
func (*SlaveStatus) ProtoMessage()    {}
func (*SlaveStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{6}
}

func (m *SlaveStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaveStatus.Unmarshal(m, b)
}
func (m *SlaveStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaveStatus.Marshal(b, m, deterministic)
}
func (m *SlaveStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaveStatus.Merge(m, src)
}
func (m *SlaveStatus) XXX_Size() int {
	return xxx_messageInfo_SlaveStatus.Size(m)
}
func (m *SlaveStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaveStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SlaveStatus proto.InternalMessageInfo

func (m *SlaveStatus) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *SlaveStatus) GetSlaveId() int32 {
	if m != nil {
		return m.SlaveId
	}
	return 0
}

func (m *SlaveStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SlaveStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SlaveStatus) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type MasterCommand struct {
	CmdId int32 `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	// Types that are valid to be assigned to Cmd:
	//	*MasterCommand_InitSlave
	//	*MasterCommand_ExecStart
	//	*MasterCommand_ExecWait
	//	*MasterCommand_ExecSignal
	//	*MasterCommand_Noop
	//	*MasterCommand_Stop
	Cmd                  isMasterCommand_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MasterCommand) Reset()         { *m = MasterCommand{} }
func (m *MasterCommand) String() string { return proto.CompactTextString(m) }
func (*MasterCommand) ProtoMessage()    {}
func (*MasterCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{7}
}

func (m *MasterCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterCommand.Unmarshal(m, b)
}
func (m *MasterCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterCommand.Marshal(b, m, deterministic)
}
func (m *MasterCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterCommand.Merge(m, src)
}
func (m *MasterCommand) XXX_Size() int {
	return xxx_messageInfo_MasterCommand.Size(m)
}
func (m *MasterCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterCommand.DiscardUnknown(m)
}

var xxx_messageInfo_MasterCommand proto.InternalMessageInfo

func (m *MasterCommand) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

type isMasterCommand_Cmd interface {
	isMasterCommand_Cmd()
}

type MasterCommand_InitSlave struct {
	InitSlave *InitSlave `protobuf:"bytes,2,opt,name=init_slave,json=initSlave,proto3,oneof"`
}

type MasterCommand_ExecStart struct {
	ExecStart *ExecStart `protobuf:"bytes,3,opt,name=exec_start,json=execStart,proto3,oneof"`
}

type MasterCommand_ExecWait struct {
	ExecWait *ExecWait `protobuf:"bytes,4,opt,name=exec_wait,json=execWait,proto3,oneof"`
}

type MasterCommand_ExecSignal struct {
	ExecSignal *ExecSignal `protobuf:"bytes,5,opt,name=exec_signal,json=execSignal,proto3,oneof"`
}

type MasterCommand_Noop struct {
	Noop *Noop `protobuf:"bytes,6,opt,name=noop,proto3,oneof"`
}

type MasterCommand_Stop struct {
	Stop *Stop `protobuf:"bytes,7,opt,name=stop,proto3,oneof"`
}

func (*MasterCommand_InitSlave) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecStart) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecWait) isMasterCommand_Cmd() {}

func (*MasterCommand_ExecSignal) isMasterCommand_Cmd() {}

func (*MasterCommand_Noop) isMasterCommand_Cmd() {}

func (*MasterCommand_Stop) isMasterCommand_Cmd() {}

func (m *MasterCommand) GetCmd() isMasterCommand_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *MasterCommand) GetInitSlave() *InitSlave {
	if x, ok := m.GetCmd().(*MasterCommand_InitSlave); ok {
		return x.InitSlave
	}
	return nil
}

func (m *MasterCommand) GetExecStart() *ExecStart {
	if x, ok := m.GetCmd().(*MasterCommand_ExecStart); ok {
		return x.ExecStart
	}
	return nil
}

func (m *MasterCommand) GetExecWait() *ExecWait {
	if x, ok := m.GetCmd().(*MasterCommand_ExecWait); ok {
		return x.ExecWait
	}
	return nil
}

func (m *MasterCommand) GetExecSignal() *ExecSignal {
	if x, ok := m.GetCmd().(*MasterCommand_ExecSignal); ok {
		return x.ExecSignal
	}
	return nil
}

func (m *MasterCommand) GetNoop() *Noop {
	if x, ok := m.GetCmd().(*MasterCommand_Noop); ok {
		return x.Noop
	}
	return nil
}

func (m *MasterCommand) GetStop() *Stop {
	if x, ok := m.GetCmd().(*MasterCommand_Stop); ok {
		return x.Stop
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MasterCommand) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MasterCommand_InitSlave)(nil),
		(*MasterCommand_ExecStart)(nil),
		(*MasterCommand_ExecWait)(nil),
		(*MasterCommand_ExecSignal)(nil),
		(*MasterCommand_Noop)(nil),
		(*MasterCommand_Stop)(nil),
	}
}

type InitSlave struct {
	SlaveId              int32    `protobuf:"varint,1,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitSlave) Reset()         { *m = InitSlave{} }
func (m *InitSlave) String() string { return proto.CompactTextString(m) }
func (*InitSlave) ProtoMessage()    {}
func (*InitSlave) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{8}
}

func (m *InitSlave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitSlave.Unmarshal(m, b)
}
func (m *InitSlave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitSlave.Marshal(b, m, deterministic)
}
func (m *InitSlave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitSlave.Merge(m, src)
}
func (m *InitSlave) XXX_Size() int {
	return xxx_messageInfo_InitSlave.Size(m)
}
func (m *InitSlave) XXX_DiscardUnknown() {
	xxx_messageInfo_InitSlave.DiscardUnknown(m)
}

var xxx_messageInfo_InitSlave proto.InternalMessageInfo

func (m *InitSlave) GetSlaveId() int32 {
	if m != nil {
		return m.SlaveId
	}
	return 0
}

type ExecStart struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OutputFileName       string   `protobuf:"bytes,2,opt,name=output_file_name,json=outputFileName,proto3" json:"output_file_name,omitempty"`
	Args                 []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStart) Reset()         { *m = ExecStart{} }
func (m *ExecStart) String() string { return proto.CompactTextString(m) }
func (*ExecStart) ProtoMessage()    {}
func (*ExecStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{9}
}

func (m *ExecStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStart.Unmarshal(m, b)
}
func (m *ExecStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStart.Marshal(b, m, deterministic)
}
func (m *ExecStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStart.Merge(m, src)
}
func (m *ExecStart) XXX_Size() int {
	return xxx_messageInfo_ExecStart.Size(m)
}
func (m *ExecStart) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStart.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStart proto.InternalMessageInfo

func (m *ExecStart) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExecStart) GetOutputFileName() string {
	if m != nil {
		return m.OutputFileName
	}
	return ""
}

func (m *ExecStart) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type ExecWait struct {
	Timeout              int32    `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecWait) Reset()         { *m = ExecWait{} }
func (m *ExecWait) String() string { return proto.CompactTextString(m) }
func (*ExecWait) ProtoMessage()    {}
func (*ExecWait) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{10}
}

func (m *ExecWait) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecWait.Unmarshal(m, b)
}
func (m *ExecWait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecWait.Marshal(b, m, deterministic)
}
func (m *ExecWait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecWait.Merge(m, src)
}
func (m *ExecWait) XXX_Size() int {
	return xxx_messageInfo_ExecWait.Size(m)
}
func (m *ExecWait) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecWait.DiscardUnknown(m)
}

var xxx_messageInfo_ExecWait proto.InternalMessageInfo

func (m *ExecWait) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type Noop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Noop) Reset()         { *m = Noop{} }
func (m *Noop) String() string { return proto.CompactTextString(m) }
func (*Noop) ProtoMessage()    {}
func (*Noop) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{11}
}

func (m *Noop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Noop.Unmarshal(m, b)
}
func (m *Noop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Noop.Marshal(b, m, deterministic)
}
func (m *Noop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Noop.Merge(m, src)
}
func (m *Noop) XXX_Size() int {
	return xxx_messageInfo_Noop.Size(m)
}
func (m *Noop) XXX_DiscardUnknown() {
	xxx_messageInfo_Noop.DiscardUnknown(m)
}

var xxx_messageInfo_Noop proto.InternalMessageInfo

type ExecSignal struct {
	Signum               ExecSignal_Signum `protobuf:"varint,1,opt,name=signum,proto3,enum=protobufs.ExecSignal_Signum" json:"signum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExecSignal) Reset()         { *m = ExecSignal{} }
func (m *ExecSignal) String() string { return proto.CompactTextString(m) }
func (*ExecSignal) ProtoMessage()    {}
func (*ExecSignal) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{12}
}

func (m *ExecSignal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecSignal.Unmarshal(m, b)
}
func (m *ExecSignal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecSignal.Marshal(b, m, deterministic)
}
func (m *ExecSignal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecSignal.Merge(m, src)
}
func (m *ExecSignal) XXX_Size() int {
	return xxx_messageInfo_ExecSignal.Size(m)
}
func (m *ExecSignal) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecSignal.DiscardUnknown(m)
}

var xxx_messageInfo_ExecSignal proto.InternalMessageInfo

func (m *ExecSignal) GetSignum() ExecSignal_Signum {
	if m != nil {
		return m.Signum
	}
	return ExecSignal_DEFAULT
}

type Stop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stop) Reset()         { *m = Stop{} }
func (m *Stop) String() string { return proto.CompactTextString(m) }
func (*Stop) ProtoMessage()    {}
func (*Stop) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{13}
}

func (m *Stop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stop.Unmarshal(m, b)
}
func (m *Stop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stop.Marshal(b, m, deterministic)
}
func (m *Stop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stop.Merge(m, src)
}
func (m *Stop) XXX_Size() int {
	return xxx_messageInfo_Stop.Size(m)
}
func (m *Stop) XXX_DiscardUnknown() {
	xxx_messageInfo_Stop.DiscardUnknown(m)
}

var xxx_messageInfo_Stop proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("protobufs.ExecSignal_Signum", ExecSignal_Signum_name, ExecSignal_Signum_value)
	proto.RegisterType((*RegisterPeerRequest)(nil), "protobufs.RegisterPeerRequest")
	proto.RegisterType((*RegisterPeerResponse)(nil), "protobufs.RegisterPeerResponse")
	proto.RegisterType((*SyncRequest)(nil), "protobufs.SyncRequest")
	proto.RegisterType((*SyncResponse)(nil), "protobufs.SyncResponse")
	proto.RegisterType((*RegisterClientRequest)(nil), "protobufs.RegisterClientRequest")
	proto.RegisterType((*RegisterClientResponse)(nil), "protobufs.RegisterClientResponse")
	proto.RegisterType((*SlaveStatus)(nil), "protobufs.SlaveStatus")
	proto.RegisterType((*MasterCommand)(nil), "protobufs.MasterCommand")
	proto.RegisterType((*InitSlave)(nil), "protobufs.InitSlave")
	proto.RegisterType((*ExecStart)(nil), "protobufs.ExecStart")
	proto.RegisterType((*ExecWait)(nil), "protobufs.ExecWait")
	proto.RegisterType((*Noop)(nil), "protobufs.Noop")
	proto.RegisterType((*ExecSignal)(nil), "protobufs.ExecSignal")
	proto.RegisterType((*Stop)(nil), "protobufs.Stop")
}

func init() {
	proto.RegisterFile("discovery.proto", fileDescriptor_1e7ff60feb39c8d0)
}

var fileDescriptor_1e7ff60feb39c8d0 = []byte{
	// 826 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0xd5, 0x95, 0x32, 0x87, 0x8a, 0x4c, 0xac, 0x63, 0x5b, 0x15, 0x8a, 0xc4, 0x21, 0xda, 0xc0,
	0x2f, 0x51, 0x51, 0xb5, 0x05, 0x0a, 0x14, 0x7d, 0x70, 0x1a, 0x27, 0x26, 0xe2, 0x18, 0x2e, 0x69,
	0x23, 0x68, 0x81, 0x82, 0xa0, 0xc8, 0x89, 0xba, 0x88, 0x78, 0x29, 0x77, 0xe9, 0xcb, 0x73, 0xbf,
	0xa5, 0x1f, 0xd1, 0xcf, 0xe8, 0x53, 0x7f, 0xa7, 0xd8, 0x59, 0x52, 0x12, 0x1d, 0xa7, 0xc8, 0x13,
	0x67, 0xe6, 0x9c, 0x99, 0x9d, 0x39, 0xcb, 0x1d, 0xd8, 0x8e, 0xb9, 0x88, 0xb2, 0x2b, 0x2c, 0x6e,
	0xa7, 0x79, 0x91, 0xc9, 0x8c, 0x99, 0xf4, 0x99, 0x97, 0xef, 0xc4, 0x84, 0xa5, 0x59, 0x8c, 0x3c,
	0xc6, 0x54, 0x72, 0x59, 0xc1, 0xce, 0x2f, 0xb0, 0xe3, 0xe1, 0x82, 0x0b, 0x89, 0xc5, 0x39, 0x62,
	0xe1, 0xe1, 0x1f, 0x25, 0x0a, 0xc9, 0x1e, 0x83, 0x95, 0x97, 0xf3, 0x25, 0x8f, 0x82, 0x30, 0x8e,
	0x8b, 0x71, 0xfb, 0xa0, 0x7d, 0x68, 0x7a, 0xa0, 0x43, 0x47, 0x71, 0x5c, 0xb0, 0x27, 0x30, 0xcc,
	0x0b, 0x7e, 0x15, 0x4a, 0xd4, 0x8c, 0x0e, 0x31, 0xac, 0x2a, 0xa6, 0x28, 0xce, 0x3f, 0x6d, 0x78,
	0xd8, 0xac, 0x2d, 0xf2, 0x2c, 0x15, 0xc8, 0x1e, 0x81, 0x95, 0xe2, 0x75, 0x90, 0x23, 0x16, 0x01,
	0x8f, 0xa9, 0x78, 0xdf, 0x33, 0x53, 0xbc, 0x56, 0x2c, 0x37, 0x66, 0x9f, 0xc1, 0x96, 0xaa, 0x13,
	0xbc, 0xc7, 0x5b, 0xaa, 0x3b, 0xf4, 0x06, 0xca, 0x7f, 0x8d, 0xb7, 0xec, 0x00, 0x86, 0x72, 0xbe,
	0x14, 0x41, 0x5e, 0xce, 0x09, 0xee, 0x12, 0x0c, 0x2a, 0x76, 0x5e, 0xce, 0x15, 0xe3, 0x19, 0xec,
	0x68, 0x46, 0x55, 0x21, 0x10, 0xbf, 0x87, 0x05, 0x8e, 0x7b, 0x44, 0xb4, 0x89, 0xa8, 0x6b, 0xf9,
	0x2a, 0xce, 0x9e, 0x41, 0x5f, 0xf5, 0x21, 0xc6, 0xfd, 0x83, 0xee, 0xa1, 0x35, 0xdb, 0x9f, 0xae,
	0xe4, 0x9a, 0x9e, 0x65, 0x31, 0xba, 0x95, 0x5a, 0x9e, 0x66, 0x39, 0x4f, 0xc1, 0xf2, 0x6f, 0xd3,
	0xa8, 0x96, 0x69, 0x1f, 0x06, 0xcd, 0x29, 0x8c, 0x9c, 0x46, 0x70, 0x46, 0x30, 0xd4, 0x3c, 0x3d,
	0xb2, 0xb3, 0x0f, 0xbb, 0xb5, 0x14, 0x3f, 0x2d, 0x39, 0xa6, 0xb2, 0xaa, 0xe0, 0xbc, 0x87, 0xbd,
	0xbb, 0x40, 0xa5, 0x92, 0x03, 0x0f, 0x94, 0x4a, 0x11, 0x45, 0xd7, 0x27, 0x28, 0xe9, 0x34, 0xd3,
	0x8d, 0xd7, 0xdd, 0x77, 0x3e, 0xa9, 0xfb, 0x3f, 0xdb, 0x60, 0xf9, 0xcb, 0xf0, 0x0a, 0x7d, 0x19,
	0xca, 0x52, 0xb0, 0x5d, 0x30, 0xa2, 0x24, 0x5e, 0xd7, 0xee, 0x47, 0x49, 0xac, 0xf5, 0x17, 0x8a,
	0xa5, 0x80, 0x0e, 0x01, 0x03, 0xf2, 0xdd, 0x98, 0xed, 0x81, 0x21, 0x28, 0x97, 0x94, 0xef, 0x7b,
	0x95, 0xc7, 0xc6, 0x30, 0x48, 0x50, 0x88, 0x70, 0xa1, 0x95, 0x36, 0xbd, 0xda, 0x65, 0x36, 0x74,
	0x65, 0xb8, 0x18, 0xf7, 0x29, 0xaa, 0x4c, 0xe7, 0xdf, 0x0e, 0x3c, 0x78, 0x13, 0xd2, 0xc4, 0x59,
	0x92, 0x84, 0x69, 0xfc, 0xb1, 0x3e, 0xbe, 0x03, 0xe0, 0x29, 0x97, 0x01, 0x1d, 0x4e, 0x9d, 0x58,
	0xb3, 0x87, 0x1b, 0x23, 0xba, 0x29, 0x97, 0x34, 0xce, 0x49, 0xcb, 0x33, 0x79, 0xed, 0xa8, 0x34,
	0xbc, 0xc1, 0x28, 0x10, 0x32, 0x2c, 0x24, 0xf5, 0xd9, 0x4c, 0x3b, 0xbe, 0xc1, 0xc8, 0x57, 0x98,
	0x4a, 0xc3, 0xda, 0x61, 0x33, 0x20, 0x27, 0xb8, 0x0e, 0xb9, 0xa4, 0x21, 0xac, 0xd9, 0xce, 0x9d,
	0xac, 0xb7, 0x21, 0x57, 0x49, 0x5b, 0x58, 0xd9, 0xec, 0x7b, 0xb0, 0xf4, 0x51, 0x7c, 0x91, 0x86,
	0x4b, 0x1a, 0xd2, 0x9a, 0xed, 0xde, 0x3d, 0x8b, 0xc0, 0x93, 0x96, 0x47, 0x6d, 0x69, 0x8f, 0x7d,
	0x09, 0xbd, 0x34, 0xcb, 0xf2, 0xb1, 0x41, 0x29, 0xdb, 0x8d, 0x8b, 0xcb, 0xf2, 0x93, 0x96, 0x47,
	0xb0, 0xa2, 0x09, 0x99, 0xe5, 0xe3, 0xc1, 0x07, 0x34, 0x5f, 0x6a, 0x9a, 0x82, 0x9f, 0xf7, 0xa1,
	0x1b, 0x25, 0xb1, 0xf3, 0x14, 0xcc, 0x95, 0x26, 0x8d, 0x5b, 0x6c, 0x37, 0x6e, 0xd1, 0xf9, 0x0d,
	0xcc, 0x95, 0x08, 0x8c, 0x41, 0x2f, 0x0d, 0x13, 0xac, 0xde, 0x38, 0xd9, 0xec, 0x10, 0xec, 0xac,
	0x94, 0x79, 0x29, 0x83, 0x77, 0x7c, 0x89, 0x01, 0xe1, 0xfa, 0x85, 0x8f, 0x74, 0xfc, 0x25, 0x5f,
	0xe2, 0x99, 0x62, 0x32, 0xe8, 0x85, 0xc5, 0x42, 0xfd, 0x0e, 0x5d, 0x95, 0xad, 0x6c, 0xe7, 0x0b,
	0xd8, 0xaa, 0xd5, 0x52, 0x3f, 0x86, 0xe4, 0x09, 0x66, 0xa5, 0xac, 0x9b, 0xa8, 0x5c, 0xc7, 0x80,
	0x9e, 0x1a, 0xd5, 0xf9, 0xab, 0x0d, 0xb0, 0x96, 0x89, 0x7d, 0x0b, 0x86, 0x52, 0xb3, 0x4c, 0x88,
	0x3f, 0x9a, 0x7d, 0x7e, 0xaf, 0x9a, 0x53, 0x9f, 0x38, 0x5e, 0xc5, 0x75, 0x42, 0x30, 0x74, 0x84,
	0x59, 0x30, 0x78, 0x71, 0xfc, 0xf2, 0xe8, 0xf2, 0xf4, 0xc2, 0x6e, 0x31, 0x00, 0xc3, 0x77, 0x5f,
	0x9d, 0x5c, 0x9e, 0xdb, 0xed, 0xca, 0x76, 0xcf, 0x2e, 0xec, 0x8e, 0x22, 0xf9, 0xee, 0xab, 0xd7,
	0xee, 0xe9, 0xa9, 0x6d, 0x56, 0xce, 0xa5, 0xef, 0x7d, 0x6d, 0xc3, 0xda, 0x99, 0xd9, 0xc3, 0xca,
	0xb9, 0x38, 0xf6, 0xde, 0xd8, 0xdb, 0xaa, 0x5f, 0xa5, 0xf9, 0xec, 0xef, 0x0e, 0x98, 0x2f, 0xea,
	0x25, 0xcb, 0x7e, 0x86, 0xe1, 0xe6, 0x8e, 0x63, 0x8f, 0x36, 0xda, 0xbd, 0x67, 0xb1, 0x4e, 0x1e,
	0x7f, 0x14, 0xaf, 0x36, 0x45, 0x8b, 0xfd, 0x08, 0x5b, 0x6a, 0x77, 0x50, 0xb9, 0xbd, 0xcd, 0x1b,
	0x5f, 0x2f, 0x9e, 0xc9, 0xfe, 0x07, 0xf1, 0x55, 0xfa, 0x5b, 0x18, 0x35, 0x37, 0x0a, 0x3b, 0xb8,
	0xe7, 0xcc, 0xc6, 0x16, 0x9a, 0x3c, 0xf9, 0x1f, 0xc6, 0xaa, 0xf0, 0x11, 0x58, 0x67, 0x78, 0x23,
	0xeb, 0x47, 0xdb, 0x68, 0x6d, 0xbd, 0x54, 0x26, 0xe3, 0x8d, 0x78, 0xe3, 0x99, 0x3b, 0xad, 0xe7,
	0xa3, 0x5f, 0x87, 0xd3, 0xaf, 0x7e, 0x58, 0xe1, 0x73, 0x83, 0xcc, 0x6f, 0xfe, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x8c, 0x27, 0xa5, 0x16, 0xb6, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	// Discovers the identities of other peers.
	// Every new peer invokes RegisterPeer at startup.
	// When the server (knowing the number of nodes to wait for) receives
	// all requests, it responds to each peer with the list of
	// identities generated for each peer and a newly assigned peer id.
	RegisterPeer(ctx context.Context, in *RegisterPeerRequest, opts ...grpc.CallOption) (*RegisterPeerResponse, error)
	// Synchronizes the current peers.
	// When a peer initializes connections with other peers, it invokes the SyncPeer RPC.
	// Similarly to RegisterPeer, the RPC returns when all peers have invoked SyncPeer, releasing them simultaneously.
	SyncPeer(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error)
	// Registers a client of the ordering system.
	// Returns the identities of all ordering peers (i.e. nodes executing the ordering protocol)
	// and a newly assigned client ID.
	RegisterClient(ctx context.Context, in *RegisterClientRequest, opts ...grpc.CallOption) (*RegisterClientResponse, error)
	// Called by the slave to ask the master (server) for the next command to execute.
	NextCommand(ctx context.Context, in *SlaveStatus, opts ...grpc.CallOption) (*MasterCommand, error)
}

type discoveryClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscoveryClient(cc grpc.ClientConnInterface) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) RegisterPeer(ctx context.Context, in *RegisterPeerRequest, opts ...grpc.CallOption) (*RegisterPeerResponse, error) {
	out := new(RegisterPeerResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/RegisterPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) SyncPeer(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error) {
	out := new(SyncResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/SyncPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) RegisterClient(ctx context.Context, in *RegisterClientRequest, opts ...grpc.CallOption) (*RegisterClientResponse, error) {
	out := new(RegisterClientResponse)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/RegisterClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) NextCommand(ctx context.Context, in *SlaveStatus, opts ...grpc.CallOption) (*MasterCommand, error) {
	out := new(MasterCommand)
	err := c.cc.Invoke(ctx, "/protobufs.Discovery/NextCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	// Discovers the identities of other peers.
	// Every new peer invokes RegisterPeer at startup.
	// When the server (knowing the number of nodes to wait for) receives
	// all requests, it responds to each peer with the list of
	// identities generated for each peer and a newly assigned peer id.
	RegisterPeer(context.Context, *RegisterPeerRequest) (*RegisterPeerResponse, error)
	// Synchronizes the current peers.
	// When a peer initializes connections with other peers, it invokes the SyncPeer RPC.
	// Similarly to RegisterPeer, the RPC returns when all peers have invoked SyncPeer, releasing them simultaneously.
	SyncPeer(context.Context, *SyncRequest) (*SyncResponse, error)
	// Registers a client of the ordering system.
	// Returns the identities of all ordering peers (i.e. nodes executing the ordering protocol)
	// and a newly assigned client ID.
	RegisterClient(context.Context, *RegisterClientRequest) (*RegisterClientResponse, error)
	// Called by the slave to ask the master (server) for the next command to execute.
	NextCommand(context.Context, *SlaveStatus) (*MasterCommand, error)
}

// UnimplementedDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryServer struct {
}

func (*UnimplementedDiscoveryServer) RegisterPeer(ctx context.Context, req *RegisterPeerRequest) (*RegisterPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterPeer not implemented")
}
func (*UnimplementedDiscoveryServer) SyncPeer(ctx context.Context, req *SyncRequest) (*SyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncPeer not implemented")
}
func (*UnimplementedDiscoveryServer) RegisterClient(ctx context.Context, req *RegisterClientRequest) (*RegisterClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterClient not implemented")
}
func (*UnimplementedDiscoveryServer) NextCommand(ctx context.Context, req *SlaveStatus) (*MasterCommand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextCommand not implemented")
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_RegisterPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).RegisterPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/RegisterPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).RegisterPeer(ctx, req.(*RegisterPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_SyncPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).SyncPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/SyncPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).SyncPeer(ctx, req.(*SyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_RegisterClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).RegisterClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/RegisterClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).RegisterClient(ctx, req.(*RegisterClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_NextCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlaveStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).NextCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.Discovery/NextCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).NextCommand(ctx, req.(*SlaveStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufs.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterPeer",
			Handler:    _Discovery_RegisterPeer_Handler,
		},
		{
			MethodName: "SyncPeer",
			Handler:    _Discovery_SyncPeer_Handler,
		},
		{
			MethodName: "RegisterClient",
			Handler:    _Discovery_RegisterClient_Handler,
		},
		{
			MethodName: "NextCommand",
			Handler:    _Discovery_NextCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}
